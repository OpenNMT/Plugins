<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sdl.LanguagePlatform.TranslationMemory</name>
    </assembly>
    <members>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.Action">
            <summary>
            Represents the action taken for a translation unit during an import operation.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.Action.Discard">
            <summary>
            When returned by an import or add method, indicates that the imported/added object was rejected (due to data errors or other problems), or skipped (if it was explicitly filtered out).
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.Action.Add">
            <summary>
            The object was added to the repository.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.Action.Merge">
            <summary>
            The object was merged with another object already in the repository.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.Action.Overwrite">
            <summary>
            The object overwrote another object previously in the repository.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.Action.Error">
            <summary>
            The attempt to add/import the TU led to an error.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged">
            <summary>
            Represents a set of results returned by multiple translation memories after a search operation for a given input (segment/translation unit/string).
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SearchResults">
            <summary>
            Represents a set of results returned by the translation memory after a search operation for a given input (segment/translation unit/string).
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchResults.DefaultSortOrder">
            <summary>
            The default sort order, in string representation, for normal searches. The
            primary sort key is the score (descending), the secondary sort key is the 
            use count (descending), and the tertiary sort key is the use date (descending).
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchResults.DefaultSortOrderConcordance">
            <summary>
            The default sort order, in string representation, for concordance searches. The
            primary sort key is the score (descending), the secondary sort key is the 
            change date (descending), and the tertiary sort key is the use count (descending).
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.#ctor(Sdl.LanguagePlatform.TranslationMemory.SortSpecification)">
            <summary>
            Initializes a new instance with the specified sort order.
            </summary>
            <param name="defaultSortOrder">The default sort order.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Sort(Sdl.LanguagePlatform.TranslationMemory.SortSpecification)">
            <summary>
            Sorts the results in this instance based on the specified sort order.
            </summary>
            <param name="sortOrder">The sort order. If null, the default sort order will be used.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Sort(Sdl.LanguagePlatform.TranslationMemory.SortSpecification,Sdl.LanguagePlatform.TranslationMemory.SearchResults.SearchResultComparer)">
            <summary>
            Sorts the results in this instance based on the specified sort order.
            </summary>
            <param name="sortOrder">The sort order. If null, the default sort order will be used.</param>
            <param name="disambiguator">An optional, caller-defined delegate which will be called 
            to disambiguate the sort order of two search results in case their sort order is not fully
            determined by the normal sort criteria.
            </param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Sort(System.String)">
            <summary>
            Sorts the results in this instance based on the specified sort order.
            </summary>
            <param name="sortOrder">The sort order, in its string representation. If null, 
            the default sort order will be used.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Sort">
            <summary>
            Sorts the results in this instance using the currently set sort order (see <see cref="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.SortOrder"/>),
            or the default sort order if no sort order is set.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Merge(Sdl.LanguagePlatform.TranslationMemory.SearchResults,System.Boolean)">
            <summary>
            Appends addtional search results to the current list of search results. Note that other fields, such as 
            the source tokens or the source word count, are not merged (although they may differ for cross-TM
            searches).
            </summary>
            <param name="other">The search results to merge with the current results.</param>
            <param name="removeDuplicates">If true, a heuristics is applied to remove duplicates. The original
            sort order is preserved, but the multiple translations information is re-evaluated.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Cap(System.Int32)">
            <summary>
            Caps the number of search results to at most <paramref name="maxCapacity"/> elements. If the object holds 
            less than the maximum number, this method has no effect.
            </summary>
            <param name="maxCapacity"></param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.CheckForMultipleTranslations(Sdl.LanguagePlatform.TranslationMemory.SearchSettings)">
            <summary>
            Count the number of exact matches in the result and set the <see cref="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.MultipleTranslations"/> flag and penalty accordingly. 
            This is only valid for normal searches; nothing will be changed for concordance searches.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Add(Sdl.LanguagePlatform.TranslationMemory.SearchResult)">
            <summary>
            Adds a new search result to the collection.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.RemoveDuplicates">
            <summary>
            Removes any duplicate search results. The duplicate with the lowest index
            is kept, and other duplicates are removed. 
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.RemoveAll(System.Func{Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.Boolean})">
            <summary>
            Removes all the elements that match the condition defined by the specified predicate
            </summary>
            <param name="predicate">the predicate to use</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.RemoveDuplicates(System.Func{Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult})">
            <summary>
            Removes any duplicate search results.
            </summary>
            <param name="GetSearchResultToRemove">determines which search result to remove;
            null should be passed if neither search result should be removed</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.AreEqual(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult)">
            <summary>
            Determines whether two search results are equal, by comparing the segments of the
            memory translation units.
            </summary>
            <param name="result1">result1</param>
            <param name="result2">results2</param>
            <returns>whether search results are equal</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Clear">
            <summary>
            Removes all results.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to iterate through the list of search results.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.System#Collections#Generic#IEnumerable{Sdl#LanguagePlatform#TranslationMemory#SearchResult}#GetEnumerator">
            <summary>
            Returns an enumerator to iterate through the list of search results.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResults.CanApplyMultipleTranslationsPenalty(Sdl.LanguagePlatform.TranslationMemory.SearchResult)">
            <summary>
            Check if Multiple Translation penalty can be applie to search result.
            Note: Multiple Translation Penalty can be applied only to exact matches
            that doesn't have following penalties applied:
            - TagMismatch
            - MemoryTagsDeleted
            - AutoLocalization
            - FilterPenalty
            - ProviderPenalty
            - TextReplacement
            </summary>
            <param name="searchResult">Search result to check</param>
            <returns>True if and only if Multiple translation penalty can be applied</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Results">
            <summary>
            Gets or sets the sesarch results.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.SortOrder">
            <summary>
            Gets or sets the sort order. The search results are not re-sorted if this
            field is set. To re-sort, call Sort() after setting the value.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.MultipleTranslations">
            <summary>
            Gets or sets the flag whether there exist multiple exact matches in the result set. Note that there also is a MultipleTranslationsPenalty
            in each match result. However, the penalty will only be set if the malus is &gt; 0, but the MultipleTrnaslations flag will 
            be set independently.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.SourceWordCounts">
            <summary>
            Gets or sets the source word counts for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.DocumentPlaceables">
            <summary>
            Gets or sets the source segment placeables. The value is usually set by 
            the search engine.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.SourceSegment">
            <summary>
            Gets or sets the document source segment for this instance. The value
            is set by the search engine.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Count">
            <summary>
            Gets the number of results in this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.SourceHash">
            <summary>
            Gets or sets the source segment's hash value.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResults.Item(System.Int32)">
            <summary>
            Gets or sets the search results at the specified index in the collection.
            </summary>
            <param name="index">The index.</param>
            <returns>The SearchResult at the specified index.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SearchResults.SearchResultComparer">
            <summary>
            Represents a method which compares two search results, and returns a value indicating 
            the sort order.
            </summary>
            <param name="a">The first object (not null)</param>
            <param name="b">The second object (not null)</param>
            <returns>A value indicating the sort order between the two objects</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged.#ctor(Sdl.LanguagePlatform.TranslationMemory.SearchResults)">
            <summary>
            Initializes a new instance with values from specified SearchResults.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged.Merge(Sdl.LanguagePlatform.TranslationMemory.SearchResults,System.Boolean,System.Int32)">
            <summary>
            Appends addtional search results to the current list of search results. Note that other fields, such as 
            the source tokens or the source word count, are not merged (although they may differ for cross-TM
            searches).
            </summary>
            <param name="other">The search results to merge with the current results.</param>
            <param name="removeDuplicates">If true, a heuristics is applied to remove duplicates. The original
            sort order is preserved, but the multiple translations information is re-evaluated.</param>
            <param name="cascadeEntryIndex">corresponds to the search results cascade entry index property</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged.CopyFromSearchResults(Sdl.LanguagePlatform.TranslationMemory.SearchResults)">
            <summary>
            
            </summary>
            <param name="other"></param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResultsMerged.DocumentDetails">
            <summary>
            
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.DocumentDetail">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.DocumentDetail.SourceWordCounts">
            <summary>
            Gets or sets the source word counts for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.DocumentDetail.DocumentPlaceables">
            <summary>
            Gets or sets the source segment placeables. The value is usually set by 
            the search engine.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.DocumentDetail.SourceSegment">
            <summary>
            Gets or sets the document source segment for this instance. The value
            is set by the search engine.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.DocumentDetail.SourceHash">
            <summary>
            Gets or sets the source segment's hash value.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ExportSettings">
            <summary>
            Encapsulates settings and parameters for export.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ExportSettings.Filter">
            <summary>
            If a filter is set, only TUs which match the filter will be exported.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ExportSettings.EditScript">
            <summary>
            If an edit script is set, it will be applied before the TU is exported, but after
            the filter conditions (if present) are evaluated.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ExportStatistics">
            <summary>
            Encapsulates the results of an export process without keeping track of the individual
            action taken for each exported TU.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ExportStatistics.Processed">
            <summary>
            Gets or sets the number of translation units processed.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ExportStatistics.Exported">
            <summary>
            Gets or sets the number of translation units exported.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FieldType">
            <summary>
            The type of a field, i.e. whether it's a user-defined field, a system-defined field, 
            a pseudo field, etc.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldType.User">
            <summary>
            A user-defined field. Added to the TM's setup dynamically.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldType.System">
            <summary>
            A system-defined field. Added to the TM by the engine.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldType.Pseudo">
            <summary>
            A pseudo field which does not exist physically, but which may be referred to by 
            filters or edit scripts.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.Field">
            <summary>
            Represents a field declaration.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PersistentObject">
            <summary>
            A base class for various translation memory objects which are persisted, such as 
            translation units. This class is for internal purposes only and not intended to 
            be used by the end user.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PersistentObject.#ctor">
            <summary>
            Initializes a new instance with an empty resource token.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PersistentObject.#ctor(Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken)">
            <summary>
            Initializes a new instance with the specified persistent object token
            </summary>
            <param name="token">The persistent object token to initialize this instance with</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PersistentObject.#ctor(System.Int32,System.Guid)">
            <summary>
            Initializes a new instance with an object token created from the the specified id and guid
            </summary>
            <param name="id">The key to assign to the <see cref="T:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken"/>.</param>
            <param name="guid">The GUID to assign to the <see cref="T:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken"/>.</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PersistentObject.ResourceId">
            <summary>
            Gets or sets the resource ID for this object.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.IField">
            <summary>
            Represents a field declaration.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.IField.Name">
            <summary>
            Gets or sets the field name.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.IField.ValueType">
            <summary>
            Gets or sets the field value type.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.IField.PicklistItemNames">
            <summary>
            The names of all picklist items for this Field. This collection will be empty if this field is not a 
            <see cref="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.SinglePicklist"/> or <see cref="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.MultiplePicklist"/>.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.Field.StructureContextFieldName">
            <summary>
            The name for the structure context field name.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.Field.TextContextFieldName">
            <summary>
            A pseudo-name for the text context field. Since text context values are directly
            stored at the TU, and not represented as field values, this pseudo field name is only
            relevant for edit scripts.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.#ctor(Sdl.LanguagePlatform.TranslationMemory.Field)">
            <summary>
            Initializes a new instance with the values of another instance, creating a deep copy.
            </summary>
            <param name="other">The other instance</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)">
            <summary>
            Initializes a new instance, with the specified name and type.
            </summary>
            <param name="name">The field name.</param>
            <param name="valueType">The field type.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.CheckName(System.String)">
            <summary>
            Checks the given name and throws an exception if the name is not valid.
            </summary>
            <param name="name">name</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.RemoveIllegalChars(System.String)">
            <summary>
            Removes those characters from an input string which are not allowed in field names, 
            and returns the form that will be accepted as a field name identifier. This method
            should only be used when fields are automatically added by some process (e.g. by 
            importing a TMX file) and that process should be robust and continue despite invalid
            field names.
            </summary>
            <param name="val">The input string.</param>
            <returns>The string after the illegal characters have been removed.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName(System.String)">
            <summary>
            Determines whether a specified string can be used as a field name.
            <para>All field names are valid if they don't start or end with whitespace.</para>
            </summary>
            <param name="val">The string.</param>
            <returns>true if the string is a legal identifier, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.LookupSpecialField(System.String)">
            <summary>
            Looks up a special field by its name. Special fields are fields with a predefined
            name, which may be "virtual" fields (those computed from data at runtime) or 
            "physical" fields (which have an actual value in the data storage). Special field
            names should not be used for user-defined fields. Note that special fields are a 
            superset of system fields (i.e. not all special fields are system fields).
            </summary>
            <param name="name">The field name</param>
            <returns>The special (predefined) field, or <c>null</c> if no such special field
            exists.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemFieldName(System.String)">
            <summary>
            Determines whether the specified name is reserved for a system (predefined) field.
            </summary>
            <param name="name">The field name to check</param>
            <returns><c>true</c> if the field name is a reserved system field name, and <c>false</c>
            otherwise</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.IsPseudoFieldName(System.String)">
            <summary>
            Determines whether the name is reserved for a pseudo (non-physical) field.
            </summary>
            <param name="name">The field name to check</param>
            <returns><c>true</c> if the name is reserved for a pseudo (non-physical) field, 
            and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.IsReservedName(System.String)">
            <summary>
            Determines whether the name is reserved for system purposes.
            </summary>
            <param name="name">The field name to check</param>
            <returns><c>true</c> if the name is reserved (for a system field, pseudo field, or other field type), 
            and <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.GetFieldType(System.String)">
            <summary>
            Determine the field type, given the field name.
            </summary>
            <param name="name">The field name to determine the field type for</param>
            <returns>The field type, if it can be determined, or <see cref="T:FieldType.User"/> if
            the field name is not reserved for system prposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.Equals(System.Object)">
            <summary>
            Determines whether this instance of Field and a specified object, which must also be a Field object,
            represent the same field declaration including the picklist according to type.
            </summary>
            <param name="obj">The other object.</param>
            <returns>true if obj represents the same field declaration as this instance; false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.EqualsDeclaration(Sdl.LanguagePlatform.TranslationMemory.Field)">
            <summary>
            Determines whether this instance of Field and a specified object, which must also be a Field object,
            represent the same field declaration, not considering the picklist.
            </summary>
            <param name="other">The other object.</param>
            <returns>true if other represents the same declaration but might have a different picklist; false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.CreateValue">
            <summary>
            Creates a FieldValue instance, with the same name and type as this field declaration.
            </summary>
            <returns>A <see cref="T:Sdl.LanguagePlatform.TranslationMemory.FieldValue"/> instance which is compatible with this field
            declaration.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.Clone">
            <summary>
            <see cref="M:System.ICloneable.Clone"/>
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Field.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Field.ValueType">
            <summary>
            Gets or sets the field value type
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Field.PicklistItemNames">
            <inheritdoc />
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Field.Name">
            <summary>
            Gets or sets the field name.
            <para>See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.Field.IsValidName(System.String)"/> for a detailed description of accepted identifiers.</para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Field.FieldType">
            <summary>
            Gets the type of the field, i.e. whether it is a system or user-defined field.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Field.IsSystemField">
            <summary>
            Gets a flag which indicates that this field is a system field. System fields cannot 
            be changed or deleted by the user. Setting this flag from user-code has no effect.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions">
            <summary>
            Encapsulates a set of field declarations. Fields are identified through their name
            or through their GUID. Note that field names are case-insensitive.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions">
            <summary>
            Represents an enumerable collection of fields, with getters by name and by GUID.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions.LookupIField(System.String)">
            <summary>
            Returns the field with the specified name, or <c>null</c> if there is no field with that 
            name.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions.LookupIField(System.Guid)">
            <summary>
            Returns the field with the specified GUID, or <c>null</c> if there is no field with that 
            GUID.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.#ctor">
            <summary>
            Initializes a new instance with an empty field declaration list.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions)">
            <summary>
            Initializes a new instance, copying the field declarations from the provided collection (deep copy).
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.#ctor(System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemory.Field})">
            <summary>
            Initializes a new instance, copying the field declarations from the provided collection (deep copy).
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Lookup(System.String)">
            <summary>
            Retrieves the field declaration with the specified name. Field names are case-insensitive.
            </summary>
            <param name="name">The field name.</param>
            <returns>The field declaration or null if it does not exist.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Lookup(System.Guid)">
            <summary>
            Retrieves a field by its GUID.
            </summary>
            <param name="guid">The GUID to look up</param>
            <returns>The field with the specified GUID, or <c>null</c> if no such field exists.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.LookupIField(System.Guid)">
            <summary>
            Returns the field with the specified GUID, or <c>null</c> if there is no field with that 
            GUID.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.LookupIField(System.String)">
            <summary>
            Returns the field with the specified name, or <c>null</c> if there is no field with that 
            name.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Add(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)">
            <summary>
            Creates a new field declaration with the specified name and type and adds it to the list.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="fieldType">The field type.</param>
            <returns>The newly created field declaration or an error if the field already exists.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Exists(System.String)">
            <summary>
            Retrieves a value indicating whether a field with the specified name exists.
            </summary>
            <param name="name">The field name.</param>
            <returns>true if the such a field exists, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Exists(Sdl.LanguagePlatform.TranslationMemory.Field)">
            <summary>
            Retrieves a value indicating whether the specified field exists in the collection. Only the name, not
            the data type, is checked.
            </summary>
            <param name="f">The field.</param>
            <returns>true if a field with such a name exists, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.ToList">
            <summary>
            Generates and returns a deep copy of the field declarations.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Add(Sdl.LanguagePlatform.TranslationMemory.Field)">
            <summary>
            Adds a new field to the list. Throws an error if the field already exists or if no additions are allowed.
            </summary>
            <param name="f">The field.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Remove(Sdl.LanguagePlatform.TranslationMemory.Field)">
            <summary>
            Removes the field with the same name as the provided field, if one exists.
            </summary>
            <param name="f">The field to remove. Only the name is checked.</param>
            <returns>True if the field has been removed, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Remove(System.String)">
            <summary>
            Removes the field with the provided name, if one exists.
            </summary>
            <param name="fieldName">The name of the field to remove.</param>
            <returns>True if the field has been removed, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.GetEnumerator">
            <summary>
            Returns an enumerator which can be used to iterate through the field list.
            </summary>
            <returns>An enumerator</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator which can be used to iterate through the field list.
            </summary>
            <returns>An enumerator</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Clear">
            <summary>
            Remove all the fields currently associated with this definition.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Contains(System.String)">
            <summary>
            Determines whether a named field exists in the collection. Field names are
            case-insensitive.
            </summary>
            <param name="fieldName">The name of the field to look up.</param>
            <returns><c>true</c> if the specified field name exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Fields">
            <summary>
            Gets the underlying list of field declarations.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Item(System.String)">
            <summary>
            Gets the field with the specified name, or <c>null</c> if there is no field with that 
            name. Field names are case-insensitive.
            </summary>
            <param name="name">The field name to look up</param>
            <returns>The field, or <c>null</c> if no field with the provided name exists.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Item(System.Guid)">
            <summary>
            Gets the field with the specified GUID, or <c>null</c> if there is no field with that 
            GUID.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldDefinitions.Count">
            <summary>
            Gets the number of fields in this collection.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier">
            <summary>
            FieldIdentifier class uniquely identifies a field by the field value type and the field name.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier.#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldValueType,System.String)">
            <summary>
            Constructor that takes the given field value type and field name.
            </summary>
            <param name="fieldValueType">field value type</param>
            <param name="fieldName">field name</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
            <returns>A hash code for this object</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier.FieldValueType">
            <summary>
            FieldValueType property represents the field value type.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldIdentifier.FieldName">
            <summary>
            FieldName property represents the field name.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FieldValueType">
            <summary>
            Specifies the type of a field declaration or value.
            <para>The field type define the operators that can be applied to a particular field value.</para>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.Unknown">
            <summary>
            Field type is unknown.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.SingleString">
            <summary>
            The field value contains one string value.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.MultipleString">
            <summary>
            The field value contains one or more strings.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.DateTime">
            <summary>
            The field value contains one DateTime value.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.SinglePicklist">
            <summary>
            The field value contains one picklist value ID.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.MultiplePicklist">
            <summary>
            The field value contains one or more picklist value ID's.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldValueType.Integer">
            <summary>
            The field value contains one integer value.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes">
            <summary>
            Specifies the fuzzy index type.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes.SourceWordBased">
            <summary>
            Word-based fuzzy index on the source segment.
            <para>All translation memories have this index by default.</para>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes.SourceCharacterBased">
            <summary>
            N-gram-based fuzzy index on the source segment.
            <para>Enabling this index will reduce the import performance.</para>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes.TargetCharacterBased">
            <summary>
            N-gram-based fuzzy index on the target segment.
            <para>Enabling this index will reduce the import performance.</para>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexes.TargetWordBased">
            <summary>
            Word-based fuzzy index on the targetsegment.
            <para>Enabling this index will reduce the import performance.</para>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexTuningSettings">
            <summary>
            Settings which affect the performance of the fuzzy index. A specific storage implementation may, 
            but does not have to, honor any tuning settings.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexTuningSettings.MinScoreIncrease">
            <summary>
            The ADDTOMINSCORE setting for the fuzzy index. It affects all fuzzy indices of the TM.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexTuningSettings.MinSearchVectorLengthSourceWordIndex">
            <summary>
            The MINHAVING setting for the source word-based fuzzy index.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexTuningSettings.MinSearchVectorLengthTargetWordIndex">
            <summary>
            The MINHAVING setting for the target word-based fuzzy index.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexTuningSettings.MinSearchVectorLengthSourceCharIndex">
            <summary>
            The MINHAVING setting for the source char-based fuzzy index.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FuzzyIndexTuningSettings.MinSearchVectorLengthTargetCharIndex">
            <summary>
            The MINHAVING setting for the target char-based fuzzy index.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1">
            <summary>
            Defines a generic method for comparing objects that expose fields.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer`1.Compare(`0,`0,System.String)">
            <summary>
            Compares two objects' specified field values and returns an indication of their relative values.
            </summary>
            <param name="a">The first of the two items to compare.</param>
            <param name="b">The second of the two items to compare.</param>
            <param name="fieldName">The field used for comparison.</param>
            <returns>Less than zero if a is less than b, zero if a equals b or a value greater than zero if a is greater than b.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ImportResults">
            <summary>
            Encapsulates the results of an import operation.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics">
            <summary>
            Encapsulates the results of an import process without keeping track of the individual
            action taken for each import TU. The <see cref="T:Sdl.LanguagePlatform.TranslationMemory.ImportResults"/> 
            give more detail.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics._RawTUs">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.RawTUs"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics._TotalRead">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.TotalRead"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics._AddedTranslationUnits">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.AddedTranslationUnits"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics._MergedTranslationUnits">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.MergedTranslationUnits"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics._Errors">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.Errors"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics._OverwrittenTranslationUnits">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.OverwrittenTranslationUnits"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics._DiscardedTranslationUnits">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.DiscardedTranslationUnits"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics._BadTranslationUnits">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.BadTranslationUnits"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.Add(Sdl.LanguagePlatform.TranslationMemory.ImportStatistics)">
            <summary>
            Adds, for each count category, the values of the other instance to the same 
            count category of this instance.
            </summary>
            <param name="other">The counts to add</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.Errors">
            <summary>
            Gets or sets the total number of translation units that generated errors (Action.Error) during the import process.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.DiscardedTranslationUnits">
            <summary>
            Gets or sets the total number of discarded translation units.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.AddedTranslationUnits">
            <summary>
            Gets or sets the number of added translation units.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.MergedTranslationUnits">
            <summary>
            Gets or sets the number of merged translation units.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.OverwrittenTranslationUnits">
            <summary>
            Gets or sets the number of overwritten translation units.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.RawTUs">
            <summary>
            Gets or sets the number of "raw" TUs which have been encountered in the input file. Since some
            import engines (such as the TMXImporter) map multilingual TUs to bilingual 1:1 TUs, 
            and also filter out language directions the caller doesn't want to process, the number
            of raw TUs may significantly differ from the number of read TUs.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.TotalRead">
            <summary>
            Gets or sets the number of total TUs which have been processed by the import engine. 
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.BadTranslationUnits">
            <summary>
            Gets or sets the number of bad translation units
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportStatistics.TotalImported">
            <summary>
            Gets the total number of imported translation units (the sum of added, merged, and overwritten TUs).
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ImportResults.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.ImportResult})">
            <summary>
            Constructor. Initializes a new instance of the ImportResults class.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportResults.Item(System.Int32)">
            <summary>
            Retrieves the action taken for the translation unit at the specified index.
            </summary>
            <param name="index">The index of the translation unit.</param>
            <returns>The import result for the translation unit at the specified position.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportResults.Count">
            <summary>
            Gets the total number of translation units processed during the import.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken">
            <summary>
            Encapsulates the primary key of a <see cref="T:Sdl.LanguagePlatform.TranslationMemory.PersistentObject"/>, such as a TM, TU, or Field Declaration.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken.#ctor(System.Int32,System.Guid)">
            <summary>
            Initializes a new instance with the specified ID and GUID.
            </summary>
            <param name="id">The object Id, usually its primary key.</param>
            <param name="guid">The GUID to assign</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
            <returns>A hash code for this object</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken.Id">
            <summary>
            Gets or sets the object id, usually its primary key.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PersistentObjectToken.Guid">
            <summary>
            Gets or sets the object GUID (optional).
            </summary>
            <value>The object GUID</value>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer">
            <summary>
            Provides methods to compute placeables and their alignments from two segments, 
            or from a translation unit.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            Computes the list of placeables and their alignment, given the provided 
            translation unit.
            </summary>
            <param name="tu">The translation unit to compute the placeables for</param>
            <returns>A list of placeables</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputePlaceables(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)">
            <summary>
            Computes the list of placeables and their alignment, given the provided 
            segments.
            </summary>
            <param name="srcSegment">The source segment</param>
            <param name="trgSegment">The target segment</param>
            <returns>A list of placeables</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputeTagAlignments(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)">
            <summary>
            Computes tag alignments between the TU segments
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PlaceableComputer.ComputeNontagAlignments(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment,System.Boolean,System.Boolean)">
            <summary>
            Computes the non-tag alignments between the TU segments
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.Sorter`1">
            <summary>
            A Sorter&lt;T&gt; implements the generic IComparer&lt;T&gt; interface to compare two 
            objects of type T, using a caller-supplied sort specification (which includes the fields 
            to consider during sorting, and the sort direction). A field value resolver then is used
            to retrieve, for a specific field, the value of that field in each of the two instaces
            which are currently compared. 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Sorter`1.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{`0},Sdl.LanguagePlatform.TranslationMemory.SortSpecification)">
            <summary>
            Initializes a new instance of the Sorter class with a specified comparer and sort specification.
            </summary>
            <param name="comparer">The field comparer object used for sorting.</param>
            <param name="sortSpecification">The sort specification.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Sorter`1.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldValueComparer{`0},Sdl.LanguagePlatform.TranslationMemory.SortSpecification,Sdl.LanguagePlatform.TranslationMemory.Sorter{`0}.SortDisambiguator)">
            <summary>
            Initializes a new instance of the Sorter class with a specified comparer and sort specification.
            </summary>
            <param name="comparer">The field comparer object used for sorting.</param>
            <param name="sortSpecification">The sort specification.</param>
            <param name="disambiguator">An optional disambiguator which is called if the sort criteria 
            do not sufficiently define the sort order between two search result objects.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Sorter`1.Compare(`0,`0)">
            <summary>
            Compares the two items and returns an indication of their relative value.
            </summary>
            <param name="x">The first of the two items to compare.</param>
            <param name="y">The second of the two items to compare.</param>
            <returns>Less than zero if x is less than y, zero if x equals y, greater than zero if x is greater than y.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.Sorter`1.SortDisambiguator">
            <summary>
            Represents a method which compares two objects, and returns a value indicating 
            the sort order.
            </summary>
            <param name="a">The first object (not null)</param>
            <param name="b">The second object (not null)</param>
            <returns>A value indicating the sort order between the two objects</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SortDirection">
            <summary>
            Specifies the sort direction, ascending or descending.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SortDirection.Ascending">
            <summary>
            The translation units will be sorted ascending according to the specified sort criterium.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SortDirection.Descending">
            <summary>
            The translation units will be sorted descending according to the specified sort criterium.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SortCriterium">
            <summary>
            Encapsulates a sort criterium.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SortCriterium.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SortCriterium.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.SortDirection)">
            <summary>
            Initializes a new instance of the SortCriterium class with the specified field name and sort direction.
            </summary>
            <param name="fieldName">The field name considered for sorting.</param>
            <param name="dir">The sort direction.</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SortCriterium.FieldName">
            <summary>
            Gets or sets the field name considered for sorting.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SortCriterium.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SortSpecification">
            <summary>
            Encapsulates a set of criteria used for sorting translation units.
            <para>The order in which the different criteria are added to a sort specification is essential.
            Only if two translation units are equivalent according to a sort criterium, the next relevant 
            criterium will be considered in order to decide which of the translation units comes first and so on.</para>
            <para>
            The sort specification consists of a collection of <see cref="T:Sdl.LanguagePlatform.TranslationMemory.SortCriterium">SortCriterium</see> objects which in turn
            may refer to system fields or filter names, and include a specification whether to sort ascending or descending. 
            Typical examples are:
            <example>
            Sco/D UsD/D
            </example>
            which sorts descending by score and descending by last usage date.
            </para>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SortSpecification.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SortSpecification.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SortSpecification class from a string.
            </summary>
            <param name="sortSpecification">The string containing the serialized form of a sort specification.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SortSpecification.Add(Sdl.LanguagePlatform.TranslationMemory.SortCriterium)">
            <summary>
            Adds a new sort criterium to the list.
            </summary>
            <param name="sc">The sort criterium.</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SortSpecification.Criteria">
            <summary>
            Gets or sets the list of sort criteria.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SortSpecification.Count">
            <summary>
            Gets the number of criteria in this sort specification.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SortSpecification.Item(System.Int32)">
            <summary>
            Gets or sets the criterium at the specified index in the list.
            </summary>
            <param name="index">The index.</param>
            <returns>The sort criterium at the given index.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction">
            <summary>
            Represents a single edit action which can be applied to a TU.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)"/>
            </summary>
            <param name="tu">The TU to apply the edit action to</param>
            <returns><c>true</c> if a change was made to the TU, and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            Validates the edit action against the provided field definitions.
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            or other issues are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns><c>true</c> if the edit action is valid, given the provided field definitions, and <c>false</c>
            otherwise.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.Mode">
            <summary>
            Describes the different modes how field values can be changed.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.Mode.Assign">
            <summary>
            The value is assigned as-is to the field. If no value exists yet for the given field, 
            a new field value will be added. This mode is valid for all field types.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.Mode.Add">
            <summary>
            <para>The value is added to the current field value. If no value is present yet, the 
            value will be assigned.</para>
            <para>For multi-valued fields, the existing field values will 
            be joined (set union) with the new value. For Date and Number fields, the value 
            will be added to the existing value. Single-valued text and picklist fields
            will always be assigned.</para>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.Mode.Substract">
            <summary>
            The value is substracted from the current field value. If no value is present yet, nothing
            will happen. For multi-valued fields, the value will be set-removed from the existing value. 
            For Date and Number fields, the value will be substracted from the existing
            value. The mode is invalid for single-valued text and picklist fields.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionChangeFieldValue">
            <summary>
            An <see cref="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction"/> which is used to change a field's value.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionChangeFieldValue.#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldValue,Sdl.LanguagePlatform.TranslationMemory.EditScripts.Mode)">
            <summary>
            Initializes a new instance with the specified values.
            </summary>
            <param name="v">The field value to apply</param>
            <param name="m">The field update mode.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionChangeFieldValue.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)"/>
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            or other issues are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns><c>true</c> if the edit action is valid, given the provided field definitions, and <c>false</c>
            otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionChangeFieldValue.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)"/>
            </summary>
            <param name="tu">The TU to apply the edit action to</param>
            <returns><c>true</c> if a change was made to the TU, and <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionChangeFieldValue.Mode">
            <summary>
            Gets or sets the field update mode to apply
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionChangeFieldValue.FieldValue">
            <summary>
            Gets or sets the field value to apply
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteAllFieldValues">
            <summary>
            Deletes all field values, optionally including system fields, such as context information. Will
            not alter core system fields (creation date, use count, etc.)
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteAllFieldValues.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteAllFieldValues.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance with the specified values.
            </summary>
            <param name="deleteSystemFields">Determines whether or not to delete system field values as well. Note
            that a storage implementation may prohibit the deletion of system field values.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteAllFieldValues.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)"/>. Always returns <c>true</c> for instances of this class.
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            or other issues are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns><c>true</c> if the edit action is valid, given the provided field definitions, and <c>false</c>
            otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteAllFieldValues.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)"/>
            </summary>
            <param name="tu">The TU to apply the edit action to</param>
            <returns><c>true</c> if a change was made to the TU, and <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteAllFieldValues.DeleteSystemFields">
            <summary>
            Gets or sets a flag whether or not to delete system field values.  Note
            that a storage implementation may prohibit the deletion of system field values.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteFieldValue">
            <summary>
            Deletes the fields' values from the TU. Will do nothing on core system fields, but does
            reset TU contexts, if defined. Note that the field itself will not be deleted from the 
            TM's setup.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteFieldValue.#ctor">
            <summary>
            Initializes a new instance with an empty field name list.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteFieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance with a new field name list. The field name list
            will have <paramref name="fieldName"/> as its single member.
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteFieldValue.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance with the specified list of field names.
            </summary>
            <param name="fieldNames">The list of field names to delete</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteFieldValue.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)"/>
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            or other issues are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns><c>true</c> if the edit action is valid, given the provided field definitions, and <c>false</c>
            otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteFieldValue.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)"/>
            </summary>
            <param name="tu">The TU to apply the edit action to</param>
            <returns><c>true</c> if a change was made to the TU, and <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteFieldValue.FieldNames">
            <summary>
            Gets or sets the names of the fields to delete.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteTags">
            <summary>
            An edit action which will remove all tags from the TU's segments. Depending on the placeholder
            replacement mode, textholder tags are either deleted or kept. It is recommended to keep text
            placeholders, as otherwise the linguistic structure of the segment may be corrupted.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteTags.#ctor">
            <summary>
            Initializes a new instance with default values (standalone tags and paired tags will be deleted)
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteTags.#ctor(Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction)">
            <summary>
            Initializes a new instance with the specified values.
            </summary>
            <param name="mode">The set of tags to delete</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteTags.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)"/>. Always returns <c>true</c> for this class.
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            or other issues are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns><c>true</c> if the edit action is valid, given the provided field definitions, and <c>false</c>
            otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteTags.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)"/>
            </summary>
            <param name="tu">The TU to apply the edit action to</param>
            <returns><c>true</c> if a change was made to the TU, and <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionDeleteTags.DeleteTagsAction">
            <summary>
            Gets or sets the tag deletion mode.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField">
            <summary>
            Renames a field or a field's picklist values. System fields cannot be renamed. 
            The subsequent processor needs to 
            know how to handle renamed fields - i.e. an importer would need to be allowed to add
            new fields on-the-fly unless the TM is already set up. If fields or picklist values are renamed, 
            in-place editing in a UI may fail unless the renamed objects are already defined in the TM's setup.
            <para>
            If a field is renamed but a value with that renamed
            field value already exists, the original field value will be dropped. Note that the 
            field type will remain as is.
            </para>
            <para>
            The action can also be used to rename picklist values. If the <see cref="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.PicklistValueMap"/>
            is non-null, then that mapping will be applied to the values of picklist fields. If you only
            want to rename the picklist values, but not the field itself, set <see cref="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.ToName"/> to the
            same value as <see cref="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.FromName"/>.
            </para>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance with the specified values.
            </summary>
            <param name="fromName">The original field name</param>
            <param name="toName">The new field name</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)"/>
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            or other issues are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns><c>true</c> if the edit action is valid, given the provided field definitions, and <c>false</c>
            otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)"/>
            </summary>
            <param name="tu">The TU to apply the edit action to</param>
            <returns><c>true</c> if a change was made to the TU, and <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.FromName">
            <summary>
            Gets or sets the field name prior to the change.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.ToName">
            <summary>
            Gets or sets the new field name. Cannot be a reserved field name (i.e. a system field).
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionRenameField.PicklistValueMap">
            <summary>
            Gets or sets a picklist value name mapping for picklist values. This will only be applied to picklist fields.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.PatternType">
            <summary>
            Describes the type of search and/or replace patterns.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.PatternType.Literal">
            <summary>
            The pattern is a literal expression (i.e. a string).
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.PatternType.RegularExpression">
            <summary>
            The pattern is a <see cref="N:System.Text.RegularExpressions">.Net regular expression</see> and needs to be matched.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace">
            <summary>
            An edit action to run a search/replace operation. Note that the search pattern will generally 
            not be found if the text is interrupted by tags.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)"/>. Always returns <c>true</c> for instances of this class.
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            or other issues are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns><c>true</c> if the edit action is valid, given the provided field definitions, and <c>false</c>
            otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction.Apply(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)"/>
            </summary>
            <param name="tu">The TU to apply the edit action to</param>
            <returns><c>true</c> if a change was made to the TU, and <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace.ApplyToTarget">
            <summary>
            If true, the S/R will be applied to the target segment. If false (default), it will
            be applied to the source segment.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace.SearchPattern">
            <summary>
            Gets or sets the pattern to search. If this is a regular expression, it will later be compiled with 
            the <see cref="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant"/> and 
            the <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase"/> options (if the 
            <see cref="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace.IgnoreCase"/> flag is set. No other regular expression flags will be applied.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace.ReplacementPattern">
            <summary>
            Gets or sets the replacement for the search pattern, if found.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace.PatternType">
            <summary>
            Gets or sets the type of the pattern. When searching literal patterns, the replacement must also 
            be a literal pattern. When searching regular expression patterns, the replacement will
            also be interpreted as a regular expression replacement pattern.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditActionSearchReplace.IgnoreCase">
            <summary>
            Gets or sets a flag whether or not to apply the pattern matching in a case-insensitive manner. For literal searches, 
            some "intelligent" casing will be applied to the replacement. For regular expression searches, 
            see <see cref="T:System.Text.RegularExpressions.Regex">.Net's regex documentation</see> how 
            case-insensitive S/R is handled.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.Continuation">
            <summary>
            Enumerates the ways how to continue the interpretation of an edit script 
            if an action was executed.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.Continuation.ExecuteAll">
            <summary>
            Always execute all edit actions in the script. Note that 
            when applying all actions in the script, applying an action may modify the changes applied 
            by a previously applied action, or influence the application of a subsequent action.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.Continuation.StopAfterFirst">
            <summary>
            Stop with the edit script once an action was successfully applied.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditUpdateMode">
            <summary>
            Enumerates the ways how a translation unit that has been changed by an edit script should 
            be updated in the TM.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditUpdateMode.UpdateTranslationUnit">
            <summary>
            The translation unit should be updated (overwritten). The original translation unit will be lost.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditUpdateMode.AddTranslationUnit">
            <summary>
            The edited translation unit will be added to the TM, which will then contain both the original
            translation unit as well as the edited one (unless there are duplicates).
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript">
            <summary>
            An edit script is an ordered collection of edit actions which can be applied to a 
            translation unit. 
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Add(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditAction)">
            <summary>
            Adds the provided action to the list of edit script actions.
            </summary>
            <param name="action">The action to add</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Clear">
            <summary>
            Clears all actions in the script.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            Validates the edit script against the provided field definitions.
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            or other issues are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns>true if the edit script is valid, given the provided field definitions. false
            otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Save(System.String)">
            <summary>
            Saves the edit script in the specified file.
            </summary>
            <param name="fileName">The file name to save the script in. Existing files will be overwritten.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Save(System.IO.Stream)">
            <summary>
            Serializes the edit script to the specified output stream.
            </summary>
            <param name="outputStream">The output stream.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Load(System.String)">
            <summary>
            Loads an edit script from the specified file name.
            </summary>
            <param name="fileName">The file name to load the data from.</param>
            <returns>The edit script stored in the specified file.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Load(System.IO.Stream)">
            <summary>
            Loads an edit script from the specified stream.
            </summary>
            <param name="stream">The stream to read the data from</param>
            <returns>The edit script loaded from the specified stream.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Actions">
            <summary>
            Gets or sets the collection of edit actions.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Continuation">
            <summary>
            Gets or sets a value which indicates how to continue with the edit script 
            once an action has been applied successfully. 
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript.Filter">
            <summary>
            Gets or sets a filter condition. If non-null, the edit script will only be applied to TUs
            which match the filter.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier">
            <summary>
            Applies an edit script to a translation unit.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            Applies the edit script to a TU.
            </summary>
            <param name="script">The script to apply</param>
            <param name="tu">The translation unit to apply the script to</param>
            <returns><c>true</c> if the TU has been changed, and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit})">
            <summary>
            Applies an edit script to a list of translation units.
            </summary>
            <param name="script">The script to apply</param>
            <param name="tus">The list of translation units to apply the script to</param>
            <returns>A bool list of equal length as the input TU list, where a corresponding 'true' value indicates
            that the respective TU has been changed.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScriptApplier.Apply(Sdl.LanguagePlatform.TranslationMemory.EditScripts.EditScript,System.Collections.Generic.IList{Sdl.LanguagePlatform.TranslationMemory.TranslationUnit},Sdl.LanguagePlatform.TranslationMemory.FilterExpression)">
            <summary>
            Applies an edit script to a list of translation units, but only to those which match the filter. If the
            filter is null, the edit script will be applied to all TUs in the list.
            </summary>
            <param name="script">The script to apply</param>
            <param name="tus">The list of translation units to apply the script to</param>
            <param name="filter">An optional filter</param>
            <returns>A bool list of equal length as the input TU list, where a corresponding 'true' value indicates
            that the respective TU has been changed.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FieldValue">
            <summary>
            Represents a field value, which is a combination of a field name, a field value type,
            and the actual field values. This class is abstract.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.FieldValue._Name">
            <summary>
            The field's name
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor">
            <summary>
            Initializes a new instance with default values. Required for serialization.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance with the specified field name.
            </summary>
            <param name="name">The field name.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            Merges this instance with another field value, which must be of the same
            type.
            </summary>
            <param name="rhs">The object to merge with.</param>
            <returns><c>true</c> if this instance was changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            Adds another field value to the current value. The other value must be of the same type.
            </summary>
            <param name="rhs">The field value to add.</param>
            <returns><c>true</c></returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            Substracts a field value from this instance's field value. Both field values must be of the same type.
            </summary>
            <param name="rhs">The field value to substract.</param>
            <returns><c>true</c> if this instance was changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)">
            <summary>
            Initializes this instance from a string (deserialization).
            </summary>
            <param name="s">The string that contains the serialized form.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)">
            <summary>
            Adds another string to this instance's value list, if this instance is of any of the multiple valued types.
            </summary>
            <param name="s">The new value to be added.</param>
            <returns><c>true</c> if this instance was changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear">
            <summary>
            Resets this instance to the default value.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString">
            <summary>
            Compute a string which represents the field value without the field name in a way which 
            can be reversed through parsing. This should only be used internally by the field expression
            parser. UI-level presentation should use the field value's .ToString() method to get the 
            field value display string.
            </summary>
            <returns>A serialized string representation of the field value, which is suitable for 
            persisting, and can be parsed through <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)"/>.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Name">
            <summary>
            Gets or sets the field name of this instance. If the vield name is not valid, 
            an exception is thrown.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldValue.ValueType">
            <summary>
            Gets the field value type.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue">
            <summary>
            Represents a single string field value.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.#ctor(Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue)">
            <summary>
            Initializes a new instance from another SingleStringFieldValue value.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SingleStringFieldValue class with the specified name.
            </summary>
            <param name="name">The field name.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SingleStringFieldValue class with the specified name and value.
            </summary>
            <param name="name">The field name.</param>
            <param name="v">The field value.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.GetValueString">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Parse(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Add(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Clear">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.Value">
            <summary>
            Gets or sets the value for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SingleStringFieldValue.ValueType">
            <summary>
            Gets the field value type. Always returns <see cref="F:FieldValueType.SingleString"/>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue">
            <summary>
            Represents a multiple string field value. Values are unique, and comparisons are 
            done case-insensitive.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.#ctor(Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue)">
            <summary>
            Initializes a new instance of the MultipleStringFieldValue class from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MultipleStringFieldValue class with the specified field name.
            </summary>
            <param name="name">The field name.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.#ctor(System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Initializes a new instance of the MultipleStringFieldValue class with the specified field name and values.
            </summary>
            <param name="name">The field name.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.GetValueString">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Add(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.HasValue(System.String)">
            <summary>
            Determines if this instance already contains a specified value.
            <para>The comparison is case insenstive.</para>
            </summary>
            <param name="v">The value.</param>
            <returns>true if this instance contains v, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Contains(System.String)">
            <summary>
            Synonymous to <see cref="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.HasValue(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.HasValues(Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue)">
            <summary>
            Determines if this instance contains all the values of another instance.
            <para>The comparison is case insensitive.</para>
            </summary>
            <param name="other">The other instance.</param>
            <returns>true if this instance contains all the values of other, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Remove(System.String)">
            <summary>
            Removes a value from this instance's value list.
            </summary>
            <param name="v">The value.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Parse(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Clear">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Values">
            <summary>
            Gets or sets the value list for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.Count">
            <summary>
            Gets the number of different items in the collection.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.MultipleStringFieldValue.ValueType">
            <summary>
            Gets the field value type. Always returns <see cref="F:FieldValueType.MultipleString"/>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue">
            <summary>
            Represents a single picklist field value.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.#ctor(Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue)">
            <summary>
            Initializes a new instance of the SinglePicklistFieldValue from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SinglePicklistFieldValue with the specified field name;
            </summary>
            <param name="name">The field name.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.PicklistItem)">
            <summary>
            Initializes a new instance of the SinglePicklistFieldValue with the specified field name and value.
            </summary>
            <param name="name">The field name.</param>
            <param name="v">The picklist value.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.GetValueString">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Parse(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Add(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Clear">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.Value">
            <summary>
            Gets or sets the value for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SinglePicklistFieldValue.ValueType">
            <summary>
            Gets the field value type. Always returns <see cref="F:FieldValueType.SinglePicklist"/>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue">
            <summary>
            Represents a multiple picklist field value.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.#ctor(Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue)">
            <summary>
            Initializes a new instance of the MultiplePicklistFieldValue class from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MultiplePicklistFieldValue class with the specified field name.
            </summary>
            <param name="name">The field name.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.#ctor(System.String,System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemory.PicklistItem})">
            <summary>
            Initializes a new instance of the MultiplePicklistFieldValue class with the specified field name and values.
            </summary>
            <param name="name">The field name.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.PicklistItem)">
            <summary>
            Adds a new picklist value to this instance's value list.
            </summary>
            <param name="v">The value to add.</param>
            <returns>true if this instance was changed, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.HasValue(Sdl.LanguagePlatform.TranslationMemory.PicklistItem)">
            <summary>
            Determines if this instance contains the specified picklist value.
            </summary>
            <param name="v">The value.</param>
            <returns>true if this instance contains v, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.HasValue(System.String)">
            <summary>
            Determines if this instance contains the specified picklist value.
            </summary>
            <param name="s">The value name.</param>
            <returns>true if this instance contains a value with the given name, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.HasValues(Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue)">
            <summary>
            Determines if this instance contains all the values of another instance. Note that this
            property is not necessarily symmetric.
            </summary>
            <param name="other">The other instance.</param>
            <returns>true if this instance contains all the values of other, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Remove(Sdl.LanguagePlatform.TranslationMemory.PicklistItem)">
            <summary>
            Removes a picklist value from this instance's value list.
            </summary>
            <param name="v">The value.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Remove(System.String)">
            <summary>
            Removes a picklist value from this instance's value list.
            </summary>
            <param name="s">The value name.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.GetValueString">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Parse(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Add(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Clear">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.Values">
            <summary>
            Gets or sets the values for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.MultiplePicklistFieldValue.ValueType">
            <summary>
            Gets the field value type. Always returns <see cref="F:FieldValueType.MultiplePicklist"/>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue">
            <summary>
            Represents a DateTime field value.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DateTimeFieldValue class with the specified field name.
            </summary>
            <param name="name">The field name.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.#ctor(Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue)">
            <summary>
            Initializes a new instance of the DateTimeFieldValue class from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.#ctor(System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the DateTimeFieldValue class with the specified field name and value.
            </summary>
            <param name="name">The field name.</param>
            <param name="v">The field value.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.GetValueString">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Parse(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Add(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Clear">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.Value">
            <summary>
            Gets and sets the value for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.DateTimeFieldValue.ValueType">
            <summary>
            Gets the field value type. Always returns <see cref="F:FieldValueType.DateTime"/>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue">
            <summary>
            Represents an integer field value.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IntFieldValue class with the specified field name.
            </summary>
            <param name="name">The field name.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.#ctor(Sdl.LanguagePlatform.TranslationMemory.IntFieldValue)">
            <summary>
            Initializes a new instance of the IntFieldValue class from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the IntFieldValue class with the specified field name and value.
            </summary>
            <param name="name">The field name.</param>
            <param name="v">The field value.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Substract(Sdl.LanguagePlatform.TranslationMemory.FieldValue)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.GetValueString">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.GetValueString"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Parse(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Parse(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Add(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Add(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Clear">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FieldValue.Clear"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.Value">
            <summary>
            Gets or sets the value for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.IntFieldValue.ValueType">
            <summary>
            Gets the field value type. Always returns <see cref="F:FieldValueType.Integer"/>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FieldValues">
            <summary>
            Encapsulates a collection of field values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldValues)">
            <summary>
            Initializes a new instance of the FieldValues class from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Add(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            Adds a new field value to this instance.
            </summary>
            <param name="fv"></param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Insert(System.Int32,Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            Inserts a new field value at the specified index
            </summary>
            <param name="index"></param>
            <param name="fv"></param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Clear">
            <summary>
            Removes all the elements from this instance.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Merge(Sdl.LanguagePlatform.TranslationMemory.FieldValues)">
            <summary>
            Merge this instance's values with the one passed in the parameter. Single field values will
            be overwritten. Multiple field values will be merged. 
            </summary>
            <param name="values">The values to merge with this instance's values</param>
            <returns>true if this instance's values were changed, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Assign(Sdl.LanguagePlatform.TranslationMemory.FieldValues)">
            <summary>
            Replaces the current field values with those of another instance.
            </summary>
            <param name="values">The other instance.</param>
            <returns>true iff field values were changed by the assignment</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String)">
            <summary>
            Returns a field value with the specified name.
            </summary>
            <param name="name">The field name.</param>
            <returns>The FieldValue object if exists, otherwise null.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Lookup(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)">
            <summary>
            Returns a field value with the specified name and performs a type check on the result.
            <para>Throws an error if the types do not match.</para>
            </summary>
            <param name="name">The field name.</param>
            <param name="expectedValueType">The expected field type.</param>
            <returns>The FieldValue object if exists, otherwise null.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.LookupOrCreate(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)">
            <summary>
            Searches for a specified field in the current instance. If the field value exists, it will be returned, 
            otherwise a new field value will be created, added to this instance and returned.
            </summary>
            <param name="name">The field name.</param>
            <param name="valueType">The field type.</param>
            <returns>A FieldValue object, never null.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Exists(System.String)">
            <summary>
            Determines whether a field value with the specified name exists in the current instance.
            </summary>
            <param name="name">The field name.</param>
            <returns>true if it exists, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(Sdl.LanguagePlatform.TranslationMemory.FieldValue)">
            <summary>
            Removes the specified field value from this instance.
            </summary>
            <param name="item">The field value object.</param>
            <returns>true if it was removed, false if the item was not found.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Remove(System.String)">
            <summary>
            Removes the field value with the specified name. 
            </summary>
            <returns>true iff the value was removed.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.RemoveAt(System.Int32)">
            <summary>
            Removes the field value at the specified position.
            </summary>
            <param name="index">The position</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the members of the underlying collection.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FieldValues.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the members of the underlying collection.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Values">
            <summary>
            Gets or sets the list of field values.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Count">
            <summary>
            Gets the number of field values contained in this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.String)">
            <summary>
            Gets the field value with the specified name.
            </summary>
            <param name="name">The field name.</param>
            <returns>The field value with that name, and <c>null</c> otherwise.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.FieldValues.Item(System.Int32)">
            <summary>
            Gets the field value at the specified index position.
            </summary>
            <param name="index">The index position</param>
            <returns>The field value at the specified position.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.Filter">
            <summary>
            Represents a filter meant to retrieve a subset of translation units from a translation memory.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Filter.#ctor(Sdl.LanguagePlatform.TranslationMemory.FilterExpression,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Filter class with the specified expression, name and penalty.
            </summary>
            <param name="filterExpression">The filter expression.</param>
            <param name="name">The filter name (non-null, non-empty, and cannot contain blanks).</param>
            <param name="penalty">The filter penalty (0 or larger).</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Filter.Save(System.String)">
            <summary>
            Saves the filter in the specified file.
            </summary>
            <param name="fileName">The file name to save the filter in. Existing files will be overwritten.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Filter.Save(System.IO.Stream)">
            <summary>
            Serializes the filter to the specified output stream.
            </summary>
            <param name="outputStream">The output stream.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Filter.Load(System.String)">
            <summary>
            Loads a filter from the specified file name.
            </summary>
            <param name="fileName">The file name to load the data from.</param>
            <returns>The filter stored in the specified file.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Filter.Load(System.IO.Stream)">
            <summary>
            Loads an filter from the specified stream.
            </summary>
            <param name="stream">The stream to read the data from</param>
            <returns>The filter loaded from the specified stream.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Filter.Name">
            <summary>
            Gets or sets the filter name. Filter names must be non-empty and cannot contain blanks.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Filter.FilterExpression">
            <summary>
            Gets or sets the filter expression.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Filter.Penalty">
            <summary>
            Gets or sets the filter penalty.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression">
            <summary>
            Base class for filter expressions.
            <remarks>Expressions can be atomic or composed.</remarks>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)">
            <summary>
            Evaluates a filter expression for a given a set of field values.
            </summary>
            <param name="values">A set of field values.</param>
            <returns>true if the field values satisfy the expression, false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            Validates the filter expression against the provided field definitions.
            </summary>
            <param name="fields">The field definitions to validate against.</param>
            <param name="throwIfInvalid">If true, an exception will be thrown if invalid field names
            are encountered. If false, the return value will be set to false without an exception
            being thrown.</param>
            <returns>true if the filter expression is valid, given the provided field definitions. false
            otherwise.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression">
            <summary>
            Represents an atomic expression, where a field must be in a specified relationship to a value.
            <remarks>The operands should be initialized before the operator, so that the class can ensure type compatibility.</remarks>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.#ctor(Sdl.LanguagePlatform.TranslationMemory.FieldValue,Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator)">
            <summary>
            Initializes a new instance of the AtomicExpression class with the given field, value and operator.
            <remarks>Throws an error if the field type is not compatible with the operator.</remarks>
            </summary>
            <param name="value">The field value containing both the field name and the value to use for comparison.</param>
            <param name="op">The operator.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Value">
            <summary>
            Gets or sets the Value for this atomic expression.
            <remarks>This property contains both the left and right operands. The Name property of the field represents the left operand
            and the Value property represents the right operand.
            <para>This property should be set before the operator Op property.</para></remarks>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Op">
            <summary>
            Gets or sets the operator for this atomic expression.
            <remarks> Throws an error if the field type is not compatible with a specific operator.
            <para>See description of enum Operator values for a list of compatible types and operators.</para></remarks>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator">
            <summary>
            Specifies the operators available in an atomic expression.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.Equal">
            <summary>
            == operator. Can be applied to any field type.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.Smaller">
            <summary>
            &lt; operator. Cannot be applied to multiple-value and picklist fields.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.SmallerEqual">
            <summary>
            &lt;= operator. Cannot be applied to multiple-value and picklist fields.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.Greater">
            <summary>
            &gt; operator. Cannot be applied to multiple-value and picklist fields.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.GreaterEqual">
            <summary>
            &gt;= operator. Cannot be applied to multiple-value and picklist fields.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.NotEqual">
            <summary>
            != operator. Cannot be applied to multiple-value fields.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.Contains">
            <summary>
            @ (contains) operator. Cannot be applied to DateTime, Integer and SinglePicklist fields.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.ContainsNot">
            <summary>
            !@ (does not contain) operator. Cannot be applied to DateTime, Integer and SinglePicklist fields.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.Matches">
            <summary>
            ~ (matches) operator. Can only be applied to single-value string fields.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AtomicExpression.Operator.MatchesNot">
            <summary>
            !~ (does not match) operator. Can only be applied to single-value string fields.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression">
            <summary>
            Represents a boolean composed expression.
            <remarks>The operator can be AND, OR and NOT and the operands can be either atomic expressions or other composed expressions.</remarks>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.#ctor(Sdl.LanguagePlatform.TranslationMemory.FilterExpression,Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator,Sdl.LanguagePlatform.TranslationMemory.FilterExpression)">
            <summary>
            Initializes a new instance of the ComposedExpression class with the specified operator and left and right operands.
            </summary>
            <param name="leftOperand">The left operand.</param>
            <param name="op">The operator.</param>
            <param name="rightOperand">The right operand.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>A string representation of the object, for display purposes.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Validate(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpression.Evaluate(Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer)"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.LeftOperand">
            <summary>
            Gets or sets the left operand of this composed expression.
            <remarks>Can only be null if the expression is used with the NOT operator.</remarks>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.RightOperand">
            <summary>
            Gets or sets the right operand of this composed expression.
            <remarks>Cannot be null.</remarks>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Op">
            <summary>
            Gets or sets the operator of this composed expression.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator">
            <summary>
            Specifies the operators available in a composed expression.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator.Not">
            <summary>
            The logical NOT operator.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator.And">
            <summary>
            The logical AND operator.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ComposedExpression.Operator.Or">
            <summary>
            The logical OR operator.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser">
            <summary>
            Provides a parser that can read a filter expression from a string and create an equivalent FilterExpression object.
            <para>The returned object can be serialized back into an equivalent string, which may not look exactly like the original input. 
            That is because the parser normalizes the input, by surrounding field names and values with double quotes and by adding brackets.</para>
            <para>Field names are case insensitive and so are string values.</para>
            <para>Picklist values are case sensitive and the parser will throw an error if the expression contains a value not defined by the 
            specified field.</para>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String,Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)">
            <summary>
            Parses the provided <paramref name="expression"/>, using the provided field declarations, 
            and returns a <see cref="T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression"/> which corresponds to the expression.
            </summary>
            <param name="expression">The expression</param>
            <param name="fieldDeclarations">The field declarations which are in effect, to 
            resolve any field references</param>
            <returns>A filter expression. An exception is thrown if <paramref name="expression"/>
            is invalid.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.#ctor(Sdl.LanguagePlatform.TranslationMemory.IFieldDefinitions)">
            <summary>
            Initializes a new instance with a collection of field declarations.
            </summary>
            <param name="fieldDeclarations">The field declarations to use for parsing.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.Parse(System.String)">
            <summary>
            Parses a string expression and returns the equivalent <see cref="T:Sdl.LanguagePlatform.TranslationMemory.FilterExpression"/> object.
            </summary>
            <param name="s">The input string.</param>
            <returns>The equivalent filter expression. If the string does not represent a valid 
            expression, an exception is thrown.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.FilterExpressionParser.FieldContainsPicklistItem(Sdl.LanguagePlatform.TranslationMemory.IField,System.String)">
            <summary>
            Returns true if picklistItemName is contained in the picklist items defined on field.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ImportResult">
            <summary>
            Encapsulates information about the result of an import operation.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ImportResult.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ImportResult.#ctor(Sdl.LanguagePlatform.TranslationMemory.Action)">
            <summary>
            Initializes a new instance of the ImportResult class with the specified action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ImportResult.#ctor(Sdl.LanguagePlatform.TranslationMemory.Action,Sdl.LanguagePlatform.Core.ErrorCode)">
            <summary>
            Initializes a new instance of the ImportResult class with the specified action, error code and error message.
            </summary>
            <param name="action">The action.</param>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportResult.Action">
            <summary>
            Gets or sets the action.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportResult.ErrorCode">
            <summary>
            Gets or sets the error code.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportResult.TuId">
            <summary>
            Gets or sets the translation unit ID for which this instance was created.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings">
            <summary>
            Represents a group of settings which control the way the import is executed.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.DefaultTagCountLimit">
            <summary>
            The default limit for the maximum number of tags a TU segment may contain.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFields">
            <summary>
            Gets or sets the value indicating the new fields behavior.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ExistingFieldsUpdateMode">
            <summary>
            Gets or sets the value indicating how to handle values of existing fields.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.OverwriteExistingTUs">
            <summary>
            Gets or sets a flag indicating whether existing TUs (those with the same source
            segment) should be deleted. Note that all such existing TUs will be deleted from
            the TM before the new TU is being added. This effectively removes all potential
            duplicates in the target TM.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IsDocumentImport">
            <summary>
            Gets or sets whether this is a document import. If yes, contextual information will be saved into the translation memory.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.PlainText">
            <summary>
            Gets or sets whether the input is plain text or it may contains tags.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TagCountLimit">
            <summary>
            Gets or sets the limit for the number of tags any TU segment may contain in order to be 
            imported. The default value is <see cref="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.DefaultTagCountLimit"/>. If the limit is
            exceeded, the TU will not be imported and an error will be generated.
            <para>If the value is 0, no limit will be applied.</para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.IncrementUsageCount">
            <summary>
            Gets or sets whether the usage count property of a translation unit should be modified upon use.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ProjectSettings">
            <summary>
            Gets or sets the project settings.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.CheckMatchingSublanguages">
            <summary>
            Gets or sets whether the import should enforce that the sublanguages match.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.Filter">
            <summary>
            Allows to access a filter to be used during import. If a filter is set, only matching translation units will be imported. 
            Note that filters will not be evaluated during document imports.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.EditScript">
            <summary>
            Allows to perform edits during import. The edit script will be applied after the filter 
            is applied (if present), but before the project settings are applied. 
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.InvalidTranslationUnitsExportPath">
            <summary>
            If non-null, invalid translation units (or those which produce import errors) 
            will be written to the specified output file.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ConfirmationLevels">
            <summary>
            Gets or sets the confirmation levels which TUs of a document import should have in order
            to be imported. When null or empty, all segments are imported. 
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldIdentifierMappings">
            <summary>
            Gets or sets the field identifier mappings; old field identifier, new field identifier. 
            Field identifier mapping immediately maps the field identifier read to another field identifier.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.TUProcessingMode">
            <summary>
            Gets or sets the TU Processing Mode to be applied to the import.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AcronymsAutoSubstitution">
            <summary>
            Gets or sets the TU Processing Mode to be applied to the import.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.AlignmentQuality">
            <summary>
            Gets/Sets the minimum import alignment quality value(default value: 70)
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption">
            <summary>
            Specifies how the system should react if an import or an add operation would result in a change to the setup 
            (such as implicitly adding unknown fields or field values).
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption.AddToSetup">
            <summary>
            The translation unit is processed and unknown user-defined fields are automatically added to the setup.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption.Ignore">
            <summary>
            The translation unit is processed and unknown user-defined fields are ignored (not added to the setup).
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption.SkipTranslationUnit">
            <summary>
            The translation units containing unknown user-defined fields are skipped.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.NewFieldsOption.Error">
            <summary>
            If any translation unit contains an unknown user-defined field an error is thrown.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldUpdateMode">
            <summary>
            Specifies how existing custom field data should be updated.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldUpdateMode.Merge">
            <summary>
            Field values of the imported TU are merged with that of the existing TU. This is the default.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldUpdateMode.Overwrite">
            <summary>
            Field values of the existing TU are overwritten with that of the imported TU. 
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.FieldUpdateMode.LeaveUnchanged">
            <summary>
            Field values of the existing TU are not changed, the field values of the imported TU 
            are discarded.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode">
            <summary>
            Controls whether cleanup heuristics are applied to TUs being read and which ones are 
            processed by the importer.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode.ProcessCleanedTUOnly">
            <summary>
            Apply flavor-specific cleanup heuristics to a TU read from the input stream 
            and process only the cleaned TU. This is the default.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode.ProcessRawTUOnly">
            <summary>
            Apply only minimal cleanup (such as trimming) to a TU read from the input stream 
            and process the raw TU, without additional, flavor-specific cleanup.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.ImportSettings.ImportTUProcessingMode.ProcessBothTUs">
            <summary>
            Process both the raw TU as well as the cleaned one. 
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer">
            <summary>
            Simplified interface for retrieving field values.
            <para>An object that has field values associated with it should implement this interface (such as TranslationUnit).</para>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String)">
            <summary>
            Returns the value of field with name "fieldName". The return value can be any field type. 
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The value of the field, or null if not defined.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)">
            <summary>
            Returns the value of field with name "fieldName", given the field value type t. 
            </summary>
            <param name="fieldName">The field name</param>
            <param name="t">The field type to return the value for.</param>
            <returns>null if no value is defined. Throws exception if value is of a different type.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType(System.String)">
            <summary>
            Returns the type of the field with name "fieldName". If the object does not have a value for that field, 
            returns FieldValueType.Unknown.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The type of that field, or FieldValueType.Unknown if it doesn't exist.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PenaltyType">
            <summary>
            Specifies the penalty type.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.Unknown">
            <summary>
            The penalty type is unknown. Needed for XML serialization in order to avoid confusion between a valid value and a non-existing one.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.TagMismatch">
            <summary>
            Applied multiple times, for each time the TU's tags don't match the search TU's/search segment's tags.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.MemoryTagsDeleted">
            <summary>
            Applied at most once if the memory tags were automatically deleted because the search segment doesn't contain any tags (in which case 
            the TagMismatch penalty will not be applied). 
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.TargetSegmentMismatch">
            <summary>
            Applied at most once when the lookup TU's target differs from the TM's.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.FilterPenalty">
            <summary>
            Identifies a penalty which is imposed by a matching filter.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.ProviderPenalty">
            <summary>
            Identifies a constant penalty which is added to all TUs returned by the search provider.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.MultipleTranslations">
            <summary>
            Applied to each exact match if there exist multiple exact matches in a result set.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.AutoLocalization">
            <summary>
            Applied if an auto-localization took place to create the translation proposal. It will
            only be triggered for auto-substitutions which affect the segment text and are due to 
            auto-localizable tokens. In particular, it will not be triggered for auto-substitutable tags, 
            variables, or text placeholders.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.TextReplacement">
            <summary>
            Applied if an auto-substitution took place to create the translation proposal and the segment
            text is affected. It will only be triggered for variable auto-substitutions and text placeholders, 
            but not for auto-localizations.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PenaltyType.Alignment">
            <summary>
            Applied for TUs which come from alignment.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.Penalty">
            <summary>
            Represents a penalty, which is a combination of a penalty type and a penalty value (the malus).
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Penalty.CanApplyMultipleTimes(Sdl.LanguagePlatform.TranslationMemory.PenaltyType)">
            <summary>
            Gets a flag which indicates whether the specified penalty type can be applied 
            multiple times in a result, or at most once. 
            </summary>
            <param name="pt">The penalty type</param>
            <returns><c>true</c> if the penalty type can be applied multiple times in a
            scoring result, and <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Penalty.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Penalty.#ctor(Sdl.LanguagePlatform.TranslationMemory.PenaltyType,System.Int32)">
            <summary>
            </summary>
            <param name="t">The penalty type.</param>
            <param name="malus">The penalty cost, which will be substracted from the base score.</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Penalty.PenaltyType">
            <summary>
            Gets or sets the penalty type.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Penalty.Malus">
            <summary>
            Gets or sets the penalty cost, which will be substracted from the base score.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PicklistField">
            <summary>
            Represents a field declaration that contains a picklist and whose field values can only be chosen from that picklist.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType,System.Collections.Generic.ICollection{Sdl.LanguagePlatform.TranslationMemory.PicklistItem})">
            <summary>
            Initializes a new instance of the PicklistField class with a specified name and type.
            <remarks>The only valid values for the type are SinglePicklist and MultiplePicklist.</remarks>
            </summary>
            <param name="name">The field name.</param>
            <param name="t">The field type.</param>
            <param name="picklistValues">The seed list of picklist values</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Initializes a new instance of the PicklistField class with a specified name and type.
            <remarks>The only valid values for the type are SinglePicklist and MultiplePicklist.</remarks>
            </summary>
            <param name="name">The field name.</param>
            <param name="t">The field type.</param>
            <param name="picklistValues">The seed list of picklist values</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.#ctor(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)">
            <summary>
            Initializes a new instance of the PicklistField class with a specified name and type.
            <remarks>The only valid values for the type are SinglePicklist and MultiplePicklist.</remarks>
            </summary>
            <param name="name">The field name.</param>
            <param name="t">The field type.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.#ctor(Sdl.LanguagePlatform.TranslationMemory.PicklistField)">
            <summary>
            Initializes a new instance with the values of another instance, creating a deep copy.
            </summary>
            <param name="other">The other instance</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.PicklistToString">
            <summary>
            Serializes the picklist values into a comma separated string.
            </summary>
            <returns>The picklist as a comma separated string or null if the field declaration is not of one of the picklist types.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.PicklistFromString(System.String)">
            <summary>
            Deserializes the picklist values from the provided string and sets the picklist values accordingly. Existing
            values will be overwritten.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.Clone">
            <summary>
            <see cref="M:System.ICloneable.Clone"/>
            </summary>
            <returns>A new object that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistField.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PicklistField.PicklistItemNames">
            <inheritdoc />
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PicklistField.Picklist">
            <summary>
            Gets the picklist items collection.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PicklistItem">
            <summary>
            Represents a picklist item in a picklist field declaration.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItem.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PicklistItem class with the specified value.
            </summary>
            <param name="name">The picklist item value.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItem.#ctor(Sdl.LanguagePlatform.TranslationMemory.PicklistItem)">
            <summary>
            Initializes a new instance with the values of another instance, creating a deep copy.
            </summary>
            <param name="other">The other instance</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PicklistItem.ID">
            <summary>
            Gets or sets the unique ID for this item.
            <para>This value should only set by the storage implementation.</para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PicklistItem.Name">
            <summary>
            Gets or sets the picklist item value.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PicklistItems">
            <summary>
            Encapsulates a collection of picklist items.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.#ctor">
            <summary>
            Initializes a new instance with an empty list of items.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.#ctor(Sdl.LanguagePlatform.TranslationMemory.PicklistItems)">
            <summary>
            Initializes a new instance with the values of another instance, creating a deep copy.
            </summary>
            <param name="other">The other instance</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.Lookup(System.String)">
            <summary>
            Retrieves an item with the specified value.
            </summary>
            <param name="name">The item value.</param>
            <returns>The picklist item or null if no such item exists.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.Contains(System.String)">
            <summary>
            Returns true if the specified picklist value exists in the collection, and false otherwise.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.Contains(Sdl.LanguagePlatform.TranslationMemory.PicklistItem)">
            <summary>
            Returns true if the specified picklist value exists in the collection, and false otherwise.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.Lookup(System.Int32)">
            <summary>
            Retrieves an item with the specified ID.
            </summary>
            <param name="id">The ID.</param>
            <returns>The picklist item or null if no such item exists.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.Add(System.String)">
            <summary>
            Creates a new picklist item with the specified value and adds it to the list.
            </summary>
            <param name="itemName">The new item value.</param>
            <returns>The newly created picklist item or an error if the item already exists.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.Add(Sdl.LanguagePlatform.TranslationMemory.PicklistItem)">
            <summary>
            Creates a new picklist item with the specified value and adds it to the list. Duplicate checks
            are done on the item's name and also on the item's ID, if provided.
            </summary>
            <param name="pli">The new item.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.Clear">
            <summary>
            Clears the list of picklist values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.GetNames">
            <summary>
            Retrieves the names of the picklist values as a string list.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.GetEnumerator">
            <summary>
            Returns an enumerator which can be used to iterate through the picklist items.
            </summary>
            <returns>An enumerator</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PicklistItems.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator which can be used to iterate through the picklist items.
            </summary>
            <returns>An enumerator</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PlaceableType">
            <summary>
            Specifies the type of a placeable.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PlaceableType.None">
            <summary>
            The placeable is not a defined placeable type (used only for initialization).
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PlaceableType.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PlaceableType.StandaloneTag">
            <summary>
            Standalone tag.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PlaceableType.PairedTagStart">
            <summary>
            Start of  a paired tag.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PlaceableType.PairedTagEnd">
            <summary>
            Start of  a paired tag.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PlaceableType.TextPlaceholder">
            <summary>
            A stand-alone tag which represents text (and not formatting)
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.PlaceableType.LockedContent">
            <summary>
            Stadalone tag that represents locked content (tags and/or text) that is 
            to be treated as a single placeable.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.Placeable">
            <summary>
            A placeable is a combination of a source token index together with a target token index. Either
            index can be -1, indicating that no corresponding token pair exists (or no appropriate segment
            was available). Not both of the indices should be -1.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Placeable.#ctor(Sdl.LanguagePlatform.TranslationMemory.PlaceableType,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance with the specified parameters.
            </summary>
            <param name="t">The placeable type.</param>
            <param name="sourceTokenIndex">The index of the token in the source segment. <c>-1</c> indicates
            that the token is not present in that segment.</param>
            <param name="targetTokenIndex">The index of the token in the target segment. <c>-1</c> indicates
            that the token is not present in that segment </param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Placeable.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Placeable.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode(object)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTagCompatible(Sdl.LanguagePlatform.Core.TagType)">
            <summary>
            Determines whether the placeable's type is compatible with the specified tag type. The 
            result is always false for non-tag placeables.
            </summary>
            <param name="tagType">The type of the tag to check</param>
            <returns>true if the placeable's type is compatible with the specified tag type, and
            false otherwise.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Placeable.SourceTokenIndex">
            <summary>
            Gets or sets the source-segment token index for the placeable. That index may be -1, 
            indicating that there is no source segment (rare) or no token in the source segment 
            is linked to the target token.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Placeable.TargetTokenIndex">
            <summary>
            Gets or sets the target-segment token index for the placeable. That index may be -1, 
            indicating that there is no target segment or no token in the target segment 
            is linked to the source token.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Placeable.Type">
            <summary>
            Gets or sets the placeable type.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.Placeable.IsTag">
            <summary>
            Gets a flag which indicates whether this placeable is a tag.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation">
            <summary>
            A placeable association is a correspondence between two placeables, one in the source 
            segment, and one in the target segment. Either may be null, but not both at the same
            time. If a placeable is null and the other isn't, it means that the respective segment wasn't
            available when the placeables were computed, or that no association could be found. 
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation.#ctor(Sdl.LanguagePlatform.TranslationMemory.Placeable,Sdl.LanguagePlatform.TranslationMemory.Placeable)">
            <summary>
            Initializes a new instance with the specified placeables.
            </summary>
            <param name="docPlaceable">The placeable found in the document TU or segment.</param>
            <param name="memPlaceable">The placeable found in the memory TU or segment.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation.AreAssociable(Sdl.LanguagePlatform.TranslationMemory.Placeable,Sdl.LanguagePlatform.TranslationMemory.Placeable)">
            <summary>
            Placeables can be associated if they are of the same type, or if one is a text placeholder
            and the other is a normal standalone tag.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation.Type">
            <summary>
            Returns the type of this placeable association, which is the type of either placeable contained in it.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation.Document">
            <summary>
            Gets or sets the source-segment placeable.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.PlaceableAssociation.Memory">
            <summary>
            Gets or sets the memory-segment placeable.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty">
            <summary>
            Represents the penalty applied to a search result.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor(Sdl.LanguagePlatform.TranslationMemory.PenaltyType,System.Int32)">
            <summary>
            Initializes a new instance of the AppliedPenalty class with the specified type and cost.
            </summary>
            <param name="pt">The penalty type.</param>
            <param name="malus">The penalty cost.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the AppliedPenalty class with the specified filter name and cost.
            </summary>
            <param name="filterName">The filter name.</param>
            <param name="malus">The penalty cost.</param>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Type">
            <summary>
            Gets or sets the penalty type. Default value: Unknown.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.FilterName">
            <summary>
            Gets or sets the filter name. Default value: null.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.AppliedPenalty.Malus">
            <summary>
            Gets or sets the penalty cost. Default value: 0.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.ScoringResult">
            <summary>
            Represents the score for a search result.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.FindPenalty(Sdl.LanguagePlatform.TranslationMemory.PenaltyType)">
            <summary>
            Retrieves the applied penalty for a specified penalty type.
            </summary>
            <param name="pt">The penalty type.</param>
            <returns>The applied penalty for the specified type or null if no penalty of that type can be found.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.FindAppliedFilter(System.String)">
            <summary>
            Retrieves the applied penalty for a specified filter.
            </summary>
            <param name="filterName">The filter name.</param>
            <returns>The applied penalty for the specified filter or null if no filter with that name can be found.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.ApplyPenalty(Sdl.LanguagePlatform.TranslationMemory.Penalty)">
            <summary>
            Applies a penalty to the current score unless a penalty with the same type has already 
            been applied.
            </summary>
            <param name="pt">The penalty.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.RemovePenalty(Sdl.LanguagePlatform.TranslationMemory.PenaltyType)">
            <summary>
            Removes the penalty of the specified type, if set.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.ApplyFilter(System.String,System.Int32)">
            <summary>
            Applies a penalty to the current score, with a specified filter and cost.
            </summary>
            <param name="filterName">The filter name.</param>
            <param name="malus">The penalty cost.</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.BaseScore">
            <summary>
            Gets or sets the base score for this result.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.ResolvedPlaceables">
            <summary>
            Gets or sets the number of placeables that can be resolved for this result.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.EditDistance">
            <summary>
            Gets or sets the edit distance for this result. The edit distance is null for concordance searches 
            and is only set for standard searches.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.MatchingConcordanceRanges">
            <summary>
            <para>Gets or sets the matching concordance ranges for this result. This field is null for standard
            searches and only set for concordance searches. The value identifies the ranges in the memory
            source segment which match the concordance search.</para>
            <para>
            Note that the ranges are not necessarily consecutive. They are, however, sorted.
            </para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.Match">
            <summary>
            Gets the final match score for this result, which is the base score minus the maluses of any applied penalties.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.MemoryTagsDeleted">
            <summary>
            Gets or sets whether the tags are deleted or not for this result.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.TagMismatch">
            <summary>
            Gets or sets whether there are any tag mismatches. This flag
            is set even if no tag mismatch penalty is configured.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.AppliedPenalties">
            <summary>
            Gets or sets the list of applied penalties for this result.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.TargetSegmentDiffers">
            <summary>
            Valid only when a whole TU is searched, and is only set if it's a 100% match. Not set for fuzzy or concordance matches.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.TextContextMatch">
            <summary>
            Gets or sets the type of context match for this result, if applicable.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.IsStructureContextMatch">
            <summary>
            Gets or sets whether or not this match also matches the structural document context. If no
            structure context was specified during the search, the value will be false.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.ScoringResult.IsExactMatch">
            <summary>
            Gets a value indicating whether this result is an exact match. This is the case
            if the base score is 100.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.TextContextMatch">
            <summary>
            Specifies the type of a context match.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TextContextMatch.NoMatch">
            <summary>
            The result is not a context match.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TextContextMatch.SourceMatch">
            <summary>
            The source segments match in the given context.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TextContextMatch.SourceTargetMatch">
            <summary>
            The source and target segments match in the given context.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SearchResult">
            <summary>
            Encapsulates the result of a search operation, a memory translation unit, 
            possiby annotated with score, placeables and context information.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResult.#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            Initializes a new instance of the SearchResult class.
            </summary>
            <param name="tmTu">The translation unit found by the search operation.</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.ScoringResult">
            <summary>
            Gets or sets the scoring for this result.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryPlaceables">
            <summary>
            Gets or sets the list of placeables which are found in the memory segment.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.PlaceableAssociations">
            <summary>
            Gets or sets the list of placeables which are found in the memory segment.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.MemoryTranslationUnit">
            <summary>
            The translation unit found by the search, used to compute the translation proposal.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.TranslationProposal">
            <summary>
            Gets or sets the translation proposal TU, which is a copy of the memory
            translation unit in which all placeables have been resolved.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.ContextData">
            <summary>
            Gets or sets the context information for this translation unit.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchResult.CascadeEntryIndex">
            <summary>
            Gets or sets the cascade entry index.
            </summary>
            <remarks>
            The cascade entry index corresponds to a position in the cascade's cascade entries list (Cascade.CascadeEntries).
            If the cascade entry index is -1 then the search result was not created in a cascade.
            </remarks>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueAccessor">
            <summary>
            A class which allows to use a search result as a <see cref="T:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer"/>.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueAccessor.#ctor(Sdl.LanguagePlatform.TranslationMemory.SearchResult)">
            <summary>
            Initializes a new instance wiht the specified values.
            </summary>
            <param name="r">The search result.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueAccessor.GetValue(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueAccessor.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueAccessor.GetType(System.String)">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.ITypedKeyValueContainer.GetType(System.String)"/>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer">
            <summary>
            Implements a comparer for search results.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchResultFieldValueComparer.Compare(Sdl.LanguagePlatform.TranslationMemory.SearchResult,Sdl.LanguagePlatform.TranslationMemory.SearchResult,System.String)">
            <summary>
            Compares two search results' specified field values and returns an indication of their relative values.
            <para>Currently only the following field names are allowed: sco (score), usc (usage count), usd (last used date),
            crd (creation date), chd (change date).</para>
            <para>If a field name is used which is not listed above, Compare will return zero.</para>
            </summary>
            <param name="a">The first of the two items to compare.</param>
            <param name="b">The second of the two items to compare.</param>
            <param name="fieldName">The field used for comparison.</param>
            <returns>Less than zero if a is less than b, zero if a equals b or a value greater than zero if a is greater than b.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SearchMode">
            <summary>
            Specifies the search type.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchMode.ExactSearch">
            <summary>
            Performs only an exact search, without fuzzy search.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchMode.NormalSearch">
            <summary>
            Performs a normal search, i.e. a combined exact/fuzzy search. Fuzzy search is only triggered
            if no exact matches are found.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchMode.FullSearch">
            <summary>
            Performs a full search, i.e. a combined exact/fuzzy search. In contrast to NormalSearch, 
            fuzzy search is always triggered, even if exact matches are found.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchMode.ConcordanceSearch">
            <summary>
            Performs a concordance search on the source segments, using the source character-based index if it exists or
            the default word-based index otherwise.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchMode.TargetConcordanceSearch">
            <summary>
            Performs a concordance search on the target segments, if the target character-based index exists.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchMode.DuplicateSearch">
            <summary>
            Performs a search on the source and target hashes for duplicate search during import (only used internally).
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.MachineTranslationLookupMode">
            <summary>
            Specifies when to use machine translation.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.MachineTranslationLookupMode.WhenNoTranslationMemoryMatch">
            <summary>
            Lookup segments only when no TM match was found.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.MachineTranslationLookupMode.Always">
            <summary>
            Always lookup segments, even when TM returns matches.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SearchSettings">
            <summary>
            Represents a set of settings relevant for search opeartions.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.MINSCORE_LOWERBOUND">
            <summary>
            The lower bound of the minimum match score supported by translation memories.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.#ctor">
            <summary>
            Initializes a new instance with default values.
            The default values are:
            <list>
            <item>ComputeTranslationProposal = false</item>
            <item>IsDocumentSearch=false</item>
            <item>Mode=SearchMode.NormalSearch</item>
            <item>MinScore=70</item>
            <item>MaxResults=10</item>
            <item>CheckMatchingSublanguages = false</item>
            </list>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.FindPenalty(Sdl.LanguagePlatform.TranslationMemory.PenaltyType)">
            <summary>
            Retrieves a penalty of a specified type.
            </summary>
            <param name="pt">The penalty type.</param>
            <returns>The penalty object, if exists, otherwise null.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.AddPenalty(Sdl.LanguagePlatform.TranslationMemory.PenaltyType,System.Int32)">
            <summary>
            Adds the specified penalty to the list of penalties, unless already present (in which
            case nothing happens). 
            </summary>
            <param name="pt">The penalty type</param>
            <param name="malus">The malus (> 0)</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.RemovePenalty(Sdl.LanguagePlatform.TranslationMemory.PenaltyType)">
            <summary>
            Removes the specified penalty from the list of penalties, if present (otherwise nothing happens). 
            </summary>
            <param name="pt">The penalty type</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.AddFilter(Sdl.LanguagePlatform.TranslationMemory.Filter)">
            <summary>
            Adds the supplied filter to the list of filters.
            </summary>
            <param name="filter">A Filter</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.RemoveFilter(System.String)">
            <summary>
            Attempts to remove the filter with the specified name.
            </summary>
            <param name="filterName">The name of the filter to be removed.</param>
            <returns>true if the filter has been found and removed; false otherwise.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.FindFilter(System.String)">
            <summary>
            Attempts to find the filter with the specified name.
            </summary>
            <param name="filterName">The name fo the filter to be found.</param>
            <returns>The filter object with that name; or null if none was found.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.Mode">
            <summary>
            Gets or sets the search mode.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.MachineTranslationLookup">
            <summary>
            Specifies when to use machine translation.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.IsDocumentSearch">
            <summary>
            Gets or sets whether contextual information should be used during the search.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.Penalties">
            <summary>
            Gets or sets the penalties.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.CheckMatchingSublanguages">
            <summary>
            Gets or sets whether the TM should apply strict language direction validation of
            the search segment or TU. The default is false.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.Filters">
            <summary>
            Gets or sets the filters.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.AutoLocalizationSettings">
            <summary>
            Gets or sets the translation settings, which contains information about
            auto-localizations and other settings specific to the translation process. The
            value is only relevant if <see cref="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.ComputeTranslationProposal"/> is true, and
            never relevant for concordance searches. NOTE that this object is not created
            by default by the constructor of the class.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.HardFilter">
            <summary>
            Gets or sets the hard filter. The hard filter is not evaluated on the storage level yet.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.SortSpecification">
            <summary>
            Gets or sets the sort specification.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.ComputeTranslationProposal">
            <summary>
            If true, compute a translation proposal with the match TU and include it in the result. 
            If false, no proposal will be computed or included in the result.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.CurrentStructureContext">
            <summary>
            Gets or sets the current structure context which is used for the search. May be null.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.MinScore">
            <summary>
            Gets or sets the minimum score for retrieving the results.
            <para>Any candidates with a score lower than MinScore are not returned by the search.</para>
            <para>The minimum accepted value for MinScore is <see cref="F:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.MINSCORE_LOWERBOUND"/>.</para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.MaxResults">
            <summary>
            Gets or sets the maximum number of results to be retrieved by the search.
            <para>The minimum accepted value for MaxResults is 1.</para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SearchSettings.IsConcordanceSearch">
            <summary>
            Gets a value indicating whether this instance is used for a concordance search.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.SystemFields">
            <summary>
            Encapsulates the system fields of a translation unit.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SystemFields.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.SystemFields.#ctor(Sdl.LanguagePlatform.TranslationMemory.SystemFields)">
            <summary>
            Initializes a new instance of the SystemFields class from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SystemFields.CreationDate">
            <summary>
            Gets or sets the date the object was created.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SystemFields.ChangeDate">
            <summary>
            Gets or sets the date the object was last changed.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SystemFields.UseDate">
            <summary>
            Gets or sets the date the object was last used.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SystemFields.UseUser">
            <summary>
            Gets or sets the username that last used the object.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SystemFields.UseCount">
            <summary>
            Gets or sets the number of times the object was used since creation.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SystemFields.CreationUser">
            <summary>
            Gets or sets the username that created the object.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.SystemFields.ChangeUser">
            <summary>
            Gets or sets the username that last changed the object.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator">
            <summary>
            Base iterator class. Contains the common properties needed for iteration through 
            a translation memory.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator._Filter">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator._MaxCount">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator._MaxScan">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator._ProcessedTranslationUnits">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator._ScannedTranslationUnits">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits"/>
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator._Forward">
            <summary>
            See <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward"/>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor">
            <summary>
            Initializes a new instance with default values (the max count is set to 100).
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.#ctor(System.Int32)">
            <summary>
            Initializes a new instance with the specified values.
            </summary>
            <param name="maxCount">The maximum number of TUs to return in one iteration roundtrip</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset">
            <summary>
            Repositions the iterator at the beginning of the translation memory.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Filter">
            <summary>
            Gets or sets the filter used by this iterator.
            <para>Only translation units satisfying this filter will be returned.</para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount">
            <summary>
            Gets or sets the maximum number of translation units that this iterator will return 
            to the caller in one step.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan">
            <summary>
            Gets or sets the maximum number of translation units that this iterator will 
            retrieve from the TM in one step. If 0, the number will be unlimited. Note that while <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount"/>
            limits the number of TUs returned to the caller, <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan"/> limits the number of TUs retrieved from
            the storage. This facilitates cancellation and progress reporting in cases where the iterator's filter
            conditions require many (or all) TUs retrieved from the storage to fill the result set.
            <para>
            Since TUs are retrieved from storage in batches of size <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxCount"/>, the number of scanned
            TUs in one iteration may actually be larger than the <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.MaxScan"/> value.
            </para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ProcessedTranslationUnits">
            <summary>
            Gets or sets the number of translation units processed by this iterator since its creation.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.ScannedTranslationUnits">
            <summary>
            Gets or sets the number of translation units processed by this iterator in the last roundtrip.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Forward">
            <summary>
            Gets or sets whether this iterator is moving forward or backward to retrieve the next page of translation units.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.RegularIterator">
            <summary>
            Represents a regular iterator that can retrieve all the translation units from a translation memory page by page.
            <para>The iterator can have a filter, in which case it will only return those translation units that match the filter.</para>
            <para>The default page for this iterator is 100 translation units.</para>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.RegularIterator.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.RegularIterator.#ctor(System.Int32)">
            <summary>
            Initializes a new instance with the specified page size.
            </summary>
            <param name="maxCount">The maximum number of translation units that this iterator will return in one roundtrip.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.RegularIterator.Reset">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.RegularIterator.PositionFrom">
            <summary>
            Gets or sets the starting position of the current page in this iterator.
            <para>The page starts at the first translation unit AFTER this position.</para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.RegularIterator.PositionTo">
            <summary>
            Gets or sets the last position of the current page in this iterator.
            <para>The page ends at this position, inclusively.</para>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator">
            <summary>
            Represents a duplicate translation units search iterator.
            <para>After the iterator is created, it is set to start searching from the beginning of the translation memory.
            This instance is passed to the API, which modifies it, by annotating the current position reached
            and passes it back to the caller, to be used in a subsequent call.</para>
            <para>This object should never be modified manually.</para>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.#ctor">
            <summary>
            Initializes a new instance.
            <para>The iterator is positioned at the beginning of the translation memory.</para>
            <para>Since the translation memory is not a sorted set of translation units, the order is storage specific and should not
            be relied upon, outside the implementation of the iterator.</para>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DuplicateIterator class for the specified translation memory and a specified page size.
            </summary>
            <param name="maxCount">The number of translation units this iterator will return in one step.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.Reset">
            <summary>
            See <see cref="M:Sdl.LanguagePlatform.TranslationMemory.TranslationMemoryIterator.Reset"/>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.PositionFrom">
            <summary>
            Gets or sets the starting position of the current page in this iterator.
            <para>The page starts at the first translation unit AFTER this position.</para>
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.PositionTo">
            <summary>
            Gets or sets the last position of the current page in this iterator.
            <para>The page ends at this position, inclusively.</para>
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.DuplicateIteratorPosition">
            <summary>
            Represents a position within the translation memory of this iterator.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.DuplicateIteratorPosition.Hash">
            <summary>
            The Hash value of this position.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.DuplicateIteratorPosition.TUId">
            <summary>
            The translation unit ID of this position.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.DuplicateIteratorPosition.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.DuplicateIterator.DuplicateIteratorPosition.#ctor(System.Int64,System.Int32)">
            <summary>
            Initializes a new instance of the DuplicateIteratorPosition at the specified location within the translation memory.
            </summary>
            <param name="hash">The hash value.</param>
            <param name="tuId">The translation unit ID.</param>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin">
            <summary>
            Specifies the origin of a translation unit.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin.Unknown">
            <summary>
            The origin is unknown.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin.TM">
            <summary>
            The translation unit was retrieved from a translation memory.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin.MachineTranslation">
            <summary>
            The translation unit was retrieved from a machine translation system.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin.Alignment">
            <summary>
            The translation unit was retrieved from a bilingual alignment.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitOrigin.ContextTM">
            <summary>
            The translation unit was retrieved from a context translation memory.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat">
            <summary>
            The original format of the Translation Unit, if imported from legacy sources.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat.SDLTradosStudio2009">
            <summary>
            The translation unit is in the format generated by SDL TRADOS Studio 2009.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat.Unknown">
            <summary>
            The translation unit has been imported from an other, unspecified, or unknown TMX input file.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat.SDLX">
            <summary>
            The translation unit has been imported from an SDLX translation memory.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat.TradosTranslatorsWorkbench">
            <summary>
            The translation unit has been imported from a Translator's Workbench translation memory.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat.IdiomWorldServer">
            <summary>
            The translation unit has been imported from an Idiom WorldServer translation memory.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat.TradosTTX">
            <summary>
            The translation unit has been imported from a bilingual TRADOS TTX file.
            </summary>
        </member>
        <member name="F:Sdl.LanguagePlatform.TranslationMemory.TranslationUnitFormat.SDLItd">
            <summary>
            The translation unit has been imported from a bilingual SDL ITD file.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit">
            <summary>
            Represents a pair of source and target text, decorated with a set of system fields and eventually, with a set of
            user defined fields/attributes. It may also contain contextual information as well as information about its origin and
            eventually, a key for unique identification on a given system.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor">
            <summary>
            Initializes a new instance of the TranslationUnit class. The system fields are initialized to their default values, 
            the user defined fields as well as the context list are initialized to empty lists.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor(Sdl.LanguagePlatform.Core.Segment,Sdl.LanguagePlatform.Core.Segment)">
            <summary>
            Initializes a new instance of the TranslationUnit class with the specified values. The system fields are initialized to their default values, 
            the user defined fields as well as the context list are initialized to empty lists.
            </summary>
            <param name="sourceSegment">The source segment</param>
            <param name="targetSegment">The target segment</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.#ctor(Sdl.LanguagePlatform.TranslationMemory.TranslationUnit)">
            <summary>
            Initializes a new instance of the TranslationUnit class from another instance (deep copy).
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Duplicate">
            <summary>
            Instantiates and returns a deep copy of the current instance.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags">
            <summary>
            Deletes all tags from the TU's segments but keeps text placeholders (and locked content tags).
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DeleteTags(Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction)">
            <summary>
            Deletes all tags from the TU's segments and performs the specified <see cref="T:Sdl.LanguagePlatform.Core.Segment.DeleteTagsAction"/> on text placeholders
            and locked content.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate">
            <summary>
            Performs validation checks on this instance. All errors will be reported.
            </summary>
            <returns>An ErrorCode.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Validate(Sdl.LanguagePlatform.Core.Segment.ValidationMode)">
            <summary>
            Performs validation checks on this instance with the specified validation mode.
            </summary>
            <returns>An ErrorCode.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.IsValid">
            <summary>
            Determines whether this instance is a valid translation unit.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetMaxTagAnchor">
            <summary>
            Returns the highest tag anchor used in any segment, or 0 if no tags are present.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.CheckAndComputeTagAssociations">
            <summary>
            Computes cross-segment tag associations. Primarily checks or changes the tag-related
            alignment anchors. Renumbers association anchors.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.EnsureConsistentAlignment(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tag},System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tag},System.Collections.Generic.HashSet{System.Int32})">
            <summary>
            Ensures that tags linked by an alignment anchor have the same tag ID.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.AlignUnalignedTags(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tag},System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tag},System.Int32)">
            <summary>
            Find new tag correspondences for the non-aligned tags. Keep the aligned ones intact.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.RenumberTagAnchors(System.Int32@)">
            <summary>
            Renumbers tag anchors in both segments so that they start at 1 and are consecutive. Cross-
            segment alignment anchors will not be modified.
            </summary>
            <returns>true iff the TU has been modified.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetAlignableTags(Sdl.LanguagePlatform.Core.Segment)">
            <summary>
            Returns the list of alignable tags in the segment, and clears the alignment
            anchor of non-alignable tags. Alignable tags are start tags and standalone tags.
            </summary>
            <param name="s">The segment</param>
            <returns>A list of alignable tags, or null if none are found.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Trim">
            <summary>
            Trims off peripheral whitespace from the TU's segments.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String)">
            <summary>
            Retrieves the value of a specified field from this translation unit.
            <para>The system fields can be retrieved using the following names:</para>
            <list type="table">
            <listheader>
            <term>Name</term>
            <description>Corresponding System Field</description>
            </listheader>
            <item><term>chd</term><description>Change date</description></item>
            <item><term>chu</term><description>Change user</description></item>
            <item><term>usd</term><description>Last used date</description></item>
            <item><term>usu</term><description>Last used user</description></item>
            <item><term>usc</term><description>Usage counter</description></item>
            <item><term>crd</term><description>Creation date</description></item>
            <item><term>cru</term><description>Creation user</description></item>
            </list>
            <para>Pseudo-fields contain values that are not saved as separate field values, but can be computed from the existing 
            information in a translatin unit. The available pseudo-fields are:</para>
            <list type="table">
            <listheader>
            <term>Name</term>
            <description>Corresponding Pseudo-field</description>
            </listheader>
            <item><term>src</term><description>Source segment (including tags).</description></item>
            <item><term>trg</term><description>Target segment (including tags)</description></item>
            <item><term>sourceplainlength</term><description>The length of the plain text in the source segment (without tags)</description></item>
            <item><term>targetplainlength</term><description>The length of the plain text in the target segment (without tags)</description></item>
            </list>
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The corresponding field value or null if such a field does not exist.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SetValue(Sdl.LanguagePlatform.TranslationMemory.FieldValue,System.Boolean)">
            <summary>
            Sets the value of the specified field, which can be a system field or a user field.
            Pseudo fields (such as src, trg, soruceplainlength, etc.) can not be set. 
            <para>Exceptions will be thrown if the field types are incompatible.</para>
            </summary>
            <param name="fv">The new field value, including the field name.</param>
            <param name="addIfMissing">If true, a new field value is added to the current
            list of values if no previous value is present.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetValue(System.String,Sdl.LanguagePlatform.TranslationMemory.FieldValueType)">
            <summary>
            Retrieves the field value with the specified type from this translation unit.
            </summary>
            <param name="fieldName">The field name.</param>
            <param name="t">The field type.</param>
            <returns>The corresponding field value, null if a field with the specified name does not exist or an error if the type 
            does not match the result.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetSystemFieldType(System.String)">
            <summary>
            Returns the field value type for known system and pseudo fields.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The field type, or <see cref="T:FieldValueType.Unknown"/> if the 
            field is not a known system or pseudo field.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.GetType(System.String)">
            <summary>
            Retrieves the type of the specified field.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The corresponding type or Unknown if a field with such name does not exist.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ComputePlaceables">
            <summary>
            Computes the list of placeables and their alignment for this translation unit.
            </summary>
            <returns>A list of placeables</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentProperties">
            <summary>
            Gets or set the document properties
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FileProperties">
            <summary>
            Gets or set the file properties 
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.DocumentSegmentPair">
            <summary>
            Gets or sets the segment pair associated to this translation unit.
            The segment pair should not be modified because the modification might change the original document.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SourceSegment">
            <summary>
            Gets or sets the source segment of this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.TargetSegment">
            <summary>
            Gets or sets the target segment of this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Contexts">
            <summary>
            Gets or sets the contexts for this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Origin">
            <summary>
            Gets or sets the origin of this translation unit.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.ConfirmationLevel">
            <summary>
            Gets or sets the confirmation level of this translation unit.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.Format">
            <summary>
            Gets or sets the format of this translation unit.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.SystemFields">
            <summary>
            Gets or sets the system fields of this translation unit.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues">
            <summary>
            Gets or sets the user-defined field values for this translation unit.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.StructureContexts">
            <summary>
            Gets or sets the names of the structure contexts in which this translation unit occured within
            the documents it originated from.
            </summary>
            <remarks>This setting is stored as a multiple string field value with name "StructureContext" in the <see cref="P:Sdl.LanguagePlatform.TranslationMemory.TranslationUnit.FieldValues"/>
            collection.</remarks>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.TuContext">
            <summary>
            Encapsulates information about the context of a translation unit relative to other translation units within a document.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContext.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the TuContext class with the specified hash values.
            </summary>
            <param name="leftSource">The source hash value of the preceding translation unit.</param>
            <param name="leftTarget">The target hash value of the preceding translation unit.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContext.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(object)"/>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContext.GetHashCode">
            <summary>
            Simple hashcode, we don't care that much if there are some conflicts
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftSource">
            <summary>
            Gets or sets the source hash value of the preceding translation unit relative to this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TuContext.LeftTarget">
            <summary>
            Gets or sets the target hash value of the preceding translation unit relative to this instance.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.TuContexts">
            <summary>
            A collection of translation unit context objects.
            <para>The same translation unit may occur in different places within a document, thus having different contexts.</para>
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.#ctor">
            <summary>
            Initializes a new instance with default values.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.#ctor(Sdl.LanguagePlatform.TranslationMemory.TuContexts)">
            <summary>
            Initializes a new instance of the TuContexts class from another instance.
            </summary>
            <param name="other">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Add(Sdl.LanguagePlatform.TranslationMemory.TuContext)">
            <summary>
            Adds a new context to the list, if it isn't already there.
            </summary>
            <param name="newVal">The new context.</param>
            <returns>true if newVal was added, false if it was already in the list.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.AddRange(Sdl.LanguagePlatform.TranslationMemory.TuContexts)">
            <summary>
            Adds the elements of another instance to the list of this instance without checking for duplicates.
            </summary>
            <param name="contexts">The other instance.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.AddRange(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.TuContext})">
            <summary>
            Adds a collection of contexts to this instance without checking for duplicates.
            </summary>
            <param name="values">The context collection.</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Merge(Sdl.LanguagePlatform.TranslationMemory.TuContexts)">
            <summary>
            Adds the elements of another instance to the list of this instance if they don't already exist in the collection.
            </summary>
            <param name="contexts">The other instance.</param>
            <returns>true if this instance was changed, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Assign(Sdl.LanguagePlatform.TranslationMemory.TuContexts)">
            <summary>
            Assigns the elements of another instance to the list of this instance.
            </summary>
            <param name="contexts">The other instance.</param>
            <returns>true if this instance was changed, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Merge(Sdl.LanguagePlatform.TranslationMemory.TuContext)">
            <summary>
            Adds an element to the list if it doesn't already exist.
            </summary>
            <param name="value">The new context.</param>
            <returns>true if value was added, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Merge(System.Collections.Generic.IEnumerable{Sdl.LanguagePlatform.TranslationMemory.TuContext})">
            <summary>
            Adds a collection of contexts to this instance if they don't already exist in the collection.
            </summary>
            <param name="values">The collection of contexts to be added.</param>
            <returns>true if this instance was changed, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Clear">
            <summary>
            Removes all the contexts from this instance.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.HasValue(Sdl.LanguagePlatform.TranslationMemory.TuContext)">
            <summary>
            Determines whether a context is already in the list.
            </summary>
            <param name="val">The context.</param>
            <returns>true if it is already in the list, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.HasValues(Sdl.LanguagePlatform.TranslationMemory.TuContexts)">
            <summary>
            Determines whether this instance contains all the contexts from another instance.
            </summary>
            <param name="other">The other instance.</param>
            <returns>true if this instance contains all the contexts from other, otherwise false.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Equals(Sdl.LanguagePlatform.TranslationMemory.TuContexts)">
            <summary>
            Determines if this instance is equivalent to another instance, i.e. they contain the same collection of contexts, 
            independent of order.
            </summary>
            <param name="other">The other instance.</param>
            <returns>true if the two objects represent the same collection of contexts, otherwise false.</returns>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Values">
            <summary>
            Gets or sets the collection of TuContext objects of this instance.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.TuContexts.Length">
            <summary>
            Gets the number of contexts contained in this instance.
            </summary>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.Utilities">
            <summary>
            General utilities.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.Utilities.VerifyLanguageDirectionCompatibility(Sdl.LanguagePlatform.Core.LanguagePair,Sdl.LanguagePlatform.Core.LanguagePair)">
            <summary>
            Determines whether two language directions are compatible. 
            </summary>
            <param name="l1">The first language direction (non-null)</param>
            <param name="l2">The second language direction (non-null)</param>
            <returns><c>true</c> if the source cultures of both language directions
            are compatible (see <see cref="M:Sdl.LanguagePlatform.Core.CultureInfoExtensions.AreCompatible(System.Globalization.CultureInfo,System.Globalization.CultureInfo)"/>),
            and the target cultures of both languages are either null or are compatible 
            as well. Otherwise, returns <c>false</c>.</returns>
        </member>
        <member name="T:Sdl.LanguagePlatform.TranslationMemory.WordCounts">
            <summary>
            Represents the result of a word count.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor">
            <summary>
            Initializes a new instance with default values. All counts will be set to 0.
            </summary>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(Sdl.LanguagePlatform.TranslationMemory.WordCounts)">
            <summary>
            Initializes a new instance with the values of another instance, creating a deep copy.
            </summary>
            <param name="other">The instance to copy</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.#ctor(System.Collections.Generic.IList{Sdl.LanguagePlatform.Core.Tokenization.Token})">
            <summary>
            Initializes a new instance from the values in the provided token collection.
            <list type="bullet">
            <item>Word and abbreviation tokens increment the character count by the length of the 
            token text and increment the word count by one, </item>
            <item>Char sequence tokens (used in far-east tokenization) increment the word and character
            count by the length of the token text,</item>
            <item>Punctuation tokens only increment the character count, by the length of the token text,</item>
            <item>Date, time, variable, number, measurement, acronym, uri, and other text placeable tokens
            increment the word and character count like words do, but also increment the placeables count,</item>
            <item>Tag tokens increment the tag and placeable counts, but not the word or character counts,</item>
            <item>Whitespace tokens do not increment any counts (even not the character count),</item>
            <item>All other token types do not increment any counts.</item>
            <item>The segment count is set to 1, independent on the number and type of the tokens.</item>
            </list>
            </summary>
            <param name="tokens">The token collection</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Duplicate">
            <summary>
            Creates a new instance that is a deep copy of this instance.
            </summary>
            <returns>A new instance that is a deep copy of this instance.</returns>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Inc(Sdl.LanguagePlatform.TranslationMemory.WordCounts)">
            <summary>
            Increments the count values of this instance with the count values of another instance.
            </summary>
            <param name="other">The other instance</param>
        </member>
        <member name="M:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Assign(Sdl.LanguagePlatform.TranslationMemory.WordCounts)">
            <summary>
            Overwrites the count values of this instance with the values of another instance.
            </summary>
            <param name="other">The instance which values to assign to this instance</param>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Segments">
            <summary>
            Gets or sets the segment count.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Words">
            <summary>
            Gets or sets the word count.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Characters">
            <summary>
            Gets or sets the character count.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Placeables">
            <summary>
            Gets or sets the placeable count.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.Tags">
            <summary>
            Gets or sets the tag count.
            </summary>
        </member>
        <member name="P:Sdl.LanguagePlatform.TranslationMemory.WordCounts.IsZero">
            <summary>
            Gets a boolean value which indicates whether all count values are zero or not.
            </summary>
        </member>
    </members>
</doc>
